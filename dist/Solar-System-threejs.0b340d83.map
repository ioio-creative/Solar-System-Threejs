{"version":3,"sources":["classes/_logic.js","node_modules/three/build/three.module.js","classes/_celestialObject.js","node_modules/newton-raphson/index.js","classes/_orbits.js","classes/_sky.js","node_modules/three-orbit-controls/index.js","node_modules/modified-newton-raphson/index.js","index.js","../../../../.nvm/versions/node/v10.6.0/lib/node_modules/parcel-bundler/src/builtins/bundle-url.js","../../../../.nvm/versions/node/v10.6.0/lib/node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["isOrbiting","getParentBody","wrapNumber","checkDegToRad","radtoDeg","hexToRgb","celestialObject","centerArray","center","split","isNaN","parseFloat","celestialObjectArray","i","length","name","inclination","number","wrap","numberArray","parsedNum","Math","PI","hex","shorthandRegex","replace","m","r","g","b","result","exec","parseInt","Number","EPSILON","undefined","pow","isInteger","value","isFinite","floor","sign","x","Function","prototype","Object","defineProperty","get","toString","match","assign","target","TypeError","output","index","arguments","source","nextKey","hasOwnProperty","call","EventDispatcher","addEventListener","type","listener","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","splice","dispatchEvent","event","array","slice","l","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","_Math","DEG2RAD","RAD2DEG","generateUUID","lut","d0","random","d1","d2","d3","uuid","toUpperCase","clamp","min","max","euclideanModulo","n","mapLinear","a1","a2","b1","b2","lerp","y","t","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","ceil","log","LN2","floorPowerOfTwo","Vector2","defineProperties","set","isVector2","setScalar","scalar","setX","setY","setComponent","Error","getComponent","clone","constructor","copy","v","add","w","console","warn","addVectors","addScalar","s","a","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","c","cos","sin","Matrix4","error","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","te","identity","me","copyPosition","extractBasis","xAxis","yAxis","zAxis","setFromMatrixColumn","makeBasis","z","extractRotation","Vector3","scaleX","scaleY","scaleZ","makeRotationFromEuler","euler","isEuler","d","f","order","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","zero","one","q","compose","lookAt","eye","up","crossVectors","multiplyMatrices","premultiply","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","count","getZ","applyMatrix4","setXYZ","determinant","transpose","tmp","setPosition","getInverse","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","theta","makeRotationY","makeRotationZ","makeRotationAxis","axis","tx","ty","makeScale","makeShear","position","quaternion","_x","_y","_z","_w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","sx","sy","sz","decompose","vector","matrix","invSX","invSY","invSZ","setFromRotationMatrix","makePerspective","left","right","top","bottom","near","far","makeOrthographic","h","p","Quaternion","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","onChangeCallback","setFromEuler","update","c1","c2","c3","s1","s2","s3","setFromAxisAngle","halfAngle","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","EPS","vFrom","vTo","inverse","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","callback","isVector3","setZ","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","projectionMatrix","matrixWorld","unproject","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","angleTo","acos","dz","setFromSpherical","sinPhiRadius","phi","radius","setFromCylindrical","setFromMatrixPosition","setFromMatrixScale","Matrix3","isMatrix3","setFromMatrix4","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","rotation","cx","cy","rotate","translate","textureId","Texture","image","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","create","isTexture","updateMatrix","toJSON","meta","isRootObject","textures","getDataURL","canvas","HTMLCanvasElement","document","createElementNS","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","metadata","generator","images","url","Array","isArray","dispose","transformUv","uv","Vector4","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","getW","WebGLRenderTarget","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","isWebGLRenderTarget","setSize","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","isWebGLRenderTargetCube","DataTexture","data","isDataTexture","Box3","Infinity","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","setFromObject","object","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","scope","traverse","node","geometry","isGeometry","vertices","isBufferGeometry","attributes","updateMatrixWorld","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","closestPoint","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","v0","f0","f1","f2","testAxis","extents","triangleNormal","satForAxes","axes","j","p0","p1","p2","triangle","distanceToPoint","clampedPoint","getBoundingSphere","Sphere","intersect","union","xax","xay","xaz","xbx","xby","xbz","yax","yay","yaz","ybx","yby","ybz","zax","zay","zaz","zbx","zby","zbz","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","Plane","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","direction","delta","denominator","start","intersectsLine","startSign","endSign","end","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","referencePoint","Frustum","p3","p4","p5","planes","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","distance","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_pars_maps","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","ShaderChunk","UniformsUtils","merge","uniforms","merged","u","uniforms_src","uniforms_dst","parameter_src","isColor","ColorKeywords","Color","setRGB","setHex","setStyle","setHSL","hue2rgb","style","handleAlpha","string","color","components","charAt","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","SRGBToLinear","copyLinearToSRGB","LinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","hsl","addColors","color1","color2","UniformsLib","diffuse","opacity","map","uvTransform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","maxMipLevel","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","properties","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ShaderLib","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","dashed","dashSize","totalSize","depth","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","physical","clearCoat","clearCoatRoughness","WebGLAnimation","isAnimating","animationLoop","onAnimationFrame","time","frame","requestAnimationFrame","stop","setAnimationLoop","setContext","WebGLAttributes","gl","buffers","WeakMap","createBuffer","bufferType","usage","dynamic","DYNAMIC_DRAW","STATIC_DRAW","buffer","bindBuffer","bufferData","onUploadCallback","FLOAT","Float32Array","Float64Array","Uint16Array","UNSIGNED_SHORT","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","Int32Array","INT","Int8Array","BYTE","Uint8Array","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","subarray","isInterleavedBufferAttribute","remove","deleteBuffer","delete","Euler","_order","DefaultOrder","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Layers","mask","channel","enable","toggle","disable","test","layers","object3DId","Object3D","parent","children","DefaultUp","onRotationChange","onQuaternionChange","enumerable","modelViewMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","isObject3D","onBeforeRender","onAfterRender","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","getObjectById","id","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","force","geometries","materials","shapes","JSON","stringify","serialize","library","element","parameters","shape","material","uuids","extractFromCache","cache","values","key","recursive","parse","Camera","matrixWorldInverse","OrthographicCamera","zoom","view","updateProjectionMatrix","isOrthographicCamera","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","zoomW","zoomH","scaleW","scaleH","Face3","materialIndex","vertexNormals","vertexColors","geometryId","Geometry","colors","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","vertex","face","jl","computeBoundingBox","obj","fromBufferGeometry","indices","positions","normals","uvs","uvs2","uv2","tempNormals","tempUVs","tempUVs2","addFace","groups","group","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","isMesh","mergeVertices","verticesMap","unique","changes","precisionPoints","precision","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","materialIndexSort","sort","newUvs1","newUvs2","normalsHash","colorsHash","uvsHash","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","hash","k","kl","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","BufferAttribute","itemSize","normalized","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","DirectGeometry","computeGroups","fromGeometry","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","arrayMax","bufferGeometryId","BufferGeometry","morphAttributes","drawRange","getIndex","setIndex","addAttribute","getAttribute","removeAttribute","addGroup","clearGroups","setDrawRange","needsUpdate","isPoints","isLine","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","pA","pB","pC","normalizeNormals","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","toNonIndexed","geometry2","array2","keys","morphAttribute","BoxGeometry","widthSegments","heightSegments","depthSegments","BoxBufferGeometry","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","materialId","Material","blending","side","flatShading","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","overdraw","isMaterial","onBeforeCompile","setValues","newValue","currentValue","isRoot","emissiveIntensity","normalMapType","sizeAttenuation","linewidth","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","srcPlanes","dstPlanes","MeshBasicMaterial","combine","isMeshBasicMaterial","ShaderMaterial","defines","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","isShaderMaterial","Ray","origin","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","Line3","distanceSq","closestPointToPointParameter","startP","startEnd","clampToLine","startEnd2","startEnd_startP","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","edgeList","projectedPoint","minDistance","Mesh","drawMode","updateMorphTargets","setDrawMode","morphTargetInfluences","morphTargetDictionary","ml","String","inverseMatrix","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","uvIntersection","uv1","uv3","checkIntersection","raycaster","checkBufferGeometryIntersection","intersection","intersects","groupMaterial","faceIndex","fvA","fvB","fvC","isMultiMaterial","faceMaterial","morphInfluences","tl","influence","targets","uvs_f","WebGLBackground","renderer","state","objects","clearColor","clearAlpha","planeCamera","planeMesh","boxMesh","render","renderList","scene","forceClear","background","setClear","autoClear","clear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","renderBufferDirect","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","extension","drawArraysInstancedANGLE","maxInstancedCount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","fromCache","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","buffergeometry","memory","_bufferGeometry","geometryAttributes","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","getWireframeAttribute","geometryIndex","WebGLIndexedBufferRenderer","drawElements","drawElementsInstancedANGLE","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","LINES","LINE_STRIP","LINE_LOOP","POINTS","reset","programs","autoReset","absNumericalSort","WebGLMorphtargets","influencesList","program","objectInfluences","influences","getUniforms","setValue","WebGLObjects","updateList","CubeTexture","emptyTexture","emptyCubeTexture","UniformContainer","seq","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocTextureUnit","setValue1f","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2f","uniform2fv","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4f","uniform4fv","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setTexture2D","setValueT6","setTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","getSingularSetter","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","updateCache","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","addLineNumbers","join","WebGLShader","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMapping","toneMappingName","generateExtensions","rendererExtensions","chunks","envMapCubeUV","objectSpaceNormalMap","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","parseIncludes","pattern","include","unrollLoops","snippet","unroll","WebGLProgram","code","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","gammaFactorDefine","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","programLog","getProgramInfoLog","trim","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","cachedAttributes","getAttributes","destroy","deleteProgram","usedTimes","WebGLPrograms","capabilities","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","parameterNames","allocateBones","skeleton","bones","nVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","isSkinnedMesh","currentRenderTarget","getRenderTarget","gammaOutput","gammaInput","envMapMode","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","pop","WebGLProperties","painterSortStable","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","renderItem","WebGLRenderLists","lists","list","UniformsCache","light","halfWidth","halfHeight","WebGLLights","ambient","vector3","matrix42","setup","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","intensity","isAmbientLight","isDirectionalLight","bias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","WebGLRenderState","lightsArray","shadowsArray","spritesArray","pushLight","pushShadow","shadowLight","pushSprite","setupLights","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","WebGLShadowMap","_renderer","_objects","_frustum","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","cubeDirections","cubeUps","cube2DViewPorts","useMorphing","useSkinning","depthMaterial","distanceMaterial","autoUpdate","_gl","_state","BLEND","setTest","setScissorTest","faceCount","shadowCamera","vpWidth","vpHeight","pars","isSpotLightShadow","shadowMatrix","setRenderTarget","vpDimensions","renderObject","getDepthMaterial","lightPositionWorld","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","keyA","keyB","materialsForVariant","cachedMaterial","CanvasTexture","isCanvasTexture","WebGLSpriteRenderer","vertexBuffer","elementBuffer","spritePosition","spriteRotation","spriteScale","uvOffset","uvScale","fogType","fogDepth","fillStyle","fillRect","sprites","useProgram","initAttributes","enableAttribute","disableUnusedAttributes","CULL_FACE","vertexAttribPointer","activeTexture","TEXTURE0","oldFogType","sceneFogType","isFog","density","setBlending","setMask","WebGLState","utils","ColorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","colorBuffer","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","compressedTextureFormats","currentProgram","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","vertexAttribDivisorANGLE","disableVertexAttribArray","getCompressedTextureFormats","formats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","ONE","blendFunc","SRC_ALPHA","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","SRC_COLOR","convert","setMaterial","frontFaceCW","setPolygonOffset","frontFace","CW","CCW","cullFace","BACK","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","webglSlot","webglType","webglTexture","boundTexture","compressedTexImage2D","apply","WebGLTextures","_isWebGL2","WebGL2RenderingContext","_videoTextures","_canvas","clampToMaxSize","maxSize","makePowerOfTwo","HTMLImageElement","ImageBitmap","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","generateMipmap","textureProperties","__maxMipLevel","LOG2E","filterFallback","LINEAR","onTextureDispose","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTarget","deallocateRenderTarget","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","slot","updateVideoTexture","__version","complete","uploadTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","isCompressed","isCompressedTexture","cubeImage","isPowerOfTwoImage","glFormat","glType","setTextureParameters","mipmap","setTextureCubeDynamic","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","CLAMP_TO_EDGE","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","isDepthTexture","internalFormat","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_STENCIL","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","WebGLUtils","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","RGB","LUMINANCE","LUMINANCE_ALPHA","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","Group","isGroup","PerspectiveCamera","fov","aspect","focus","filmGauge","filmOffset","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","skew","ArrayCamera","cameras","isArrayCamera","WebVRManager","device","frameData","poseTarget","controllers","standingMatrix","standingMatrixInverse","window","VRFrameData","onVRDisplayPresentChange","tempQuaternion","tempPosition","cameraL","bounds","cameraR","cameraVR","isPresenting","currentSize","currentPixelRatio","eyeParameters","getEyeParameters","renderWidth","renderHeight","getPixelRatio","setDrawingBufferSize","animation","isTriggerPressed","findGamepad","gamepads","navigator","getGamepads","gamepad","startsWith","updateControllers","controller","pose","hasPosition","orientation","buttonId","buttons","pressed","userHeight","getController","getDevice","setDevice","setPoseTarget","getCamera","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","poseObject","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","getStandingMatrix","submitFrame","WebXRManager","session","frameOfRef","inputSources","setCompatibleXRDevice","onSessionEvent","inputSource","onSessionEnd","setFramebuffer","setSession","baseLayer","XRWebGLLayer","requestFrameOfReference","frameOfReferenceType","then","getInputSources","updateCamera","onAnimationFrameCallback","getDevicePose","views","getViewport","getViewMatrix","inputPose","getInputPose","pointerMatrix","THREE","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","currentRenderList","currentRenderState","domElement","sortObjects","toneMappingExposure","toneMappingWhitePoint","_this","_isContextLost","_framebuffer","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_usedTextureUnits","_width","_height","_pixelRatio","_viewport","_scissor","_scissorTest","_clipping","_clippingEnabled","_localClippingEnabled","_vector3","getTargetPixelRatio","contextAttributes","onContextLost","onContextRestore","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","spriteRenderer","initGLContext","vr","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","getCurrentViewport","setScissor","boolean","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","preventDefault","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReference","renderObjectImmediate","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","programAttributes","positionArray","isMeshPhongMaterial","isMeshStandardMaterial","isMeshNormalMaterial","normalArray","nx","ny","nz","uvArray","colorArray","setProgram","geometryProgram","updateBuffers","rangeFactor","setupVertexAttributes","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isInstancedBufferGeometry","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","compile","isLight","initMaterial","projectObject","opaqueObjects","transparentObjects","overrideMaterial","renderObjects","isSprite","isImmediateRenderObject","camera2","materialProperties","programChange","lightsHash","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","markUniformsLightsNeedsUpdate","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","refreshUniformsDepth","refreshUniformsDistance","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isShadowMaterial","ltc_1","LTC_1","ltc_2","LTC_2","uvScaleMap","textureUnit","warned","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","FogExp2","Fog","Scene","SpriteMaterial","isSpriteMaterial","Sprite","intersectPoint","worldScale","mvPosition","alignedPosition","rotatedPosition","viewWorldMatrix","transformVertex","vertexPosition","LOD","levels","addLevel","getObjectForDistance","matrixPosition","Skeleton","boneInverses","calculateInverses","bone","isBone","offsetMatrix","identityMatrix","getBoneByName","Bone","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","initBones","bind","normalizeSkinWeights","gbone","pos","rotq","scl","sw","vec","skinWeight","linecap","linejoin","Line","LineSegments","computeLineDistances","positionAttribute","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","step","distSq","nbVertices","LineLoop","Points","threshold","params","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","VideoTexture","video","readyState","HAVE_CURRENT_DATA","CompressedTexture","DepthTexture","WireframeGeometry","o","ol","edge","edges","ParametricGeometry","func","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","PolyhedronGeometry","detail","PolyhedronBufferGeometry","uvBuffer","subdivide","appplyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","correctUVs","correctSeam","centroid","azi","correctUV","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","P","generateBufferData","generateSegment","generateIndices","getPointAt","N","B","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","T","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","arc","TorusBufferGeometry","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","invSize","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","prev","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","nextZ","prevZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","hole","findHoleBridge","hx","hy","mx","my","tanMin","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","px","py","intersectsPolygon","middleInside","q2","inside","Node","an","bp","sum","ShapeUtils","contour","isClockWise","pts","triangulateShape","holes","removeDupEndPts","addContour","holeIndex","forEach","ExtrudeGeometry","ExtrudeBufferGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","extrudeByPath","splineTube","binormal","position2","getSpacedPoints","ahole","hl","shapePoints","extractPoints","reverse","concat","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","text","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","base","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","toJSON$1","shapeHole","indexOffset","shapeVertices","shapeHoles","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","freeze","RawShaderMaterial","Materials","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","transform","DefaultLoadingManager","loading","FileLoader","manager","load","cached","setTimeout","dataUriRegex","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","response","responseType","toLowerCase","charCodeAt","Blob","parser","DOMParser","parseFromString","request","XMLHttpRequest","open","callbacks","status","withCredentials","overrideMimeType","header","requestHeader","setRequestHeader","send","setPath","setResponseType","setWithCredentials","setMimeType","CompressedTextureLoader","_parser","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","DataTextureLoader","texData","ImageLoader","crossOrigin","onImageLoad","onImageError","substr","src","setCrossOrigin","CubeTextureLoader","urls","TextureLoader","isJPEG","search","Curve","arcLengthDivisions","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","mat","MAX_VALUE","tz","fromJSON","json","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","pz","CatmullRomCurve3","curveType","isCatmullRomCurve3","intPoint","weight","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","tangent","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","lens","cacheLengths","sums","resolution","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","absarc","absellipse","ellipse","firstPoint","lastPoint","Shape","getPointsHoles","holesPts","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","StringKeyframeTrack","times","interpolation","KeyframeTrack","ValueTypeName","ValueBufferType","DefaultInterpolation","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","BooleanKeyframeTrack","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","QuaternionLinearInterpolant","QuaternionKeyframeTrack","getValueSize","ColorKeyframeTrack","NumberKeyframeTrack","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","TimeBufferType","setInterpolation","validate","optimize","trackType","_getTrackTypeForValueTypeName","track","getInterpolation","typeName","VectorKeyframeTrack","InterpolantFactoryMethodDiscrete","factoryMethod","createInterpolant","shift","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","AnimationClip","duration","tracks","resetDuration","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","MaterialLoader","setTextures","getTexture","shading","BufferGeometryLoader","typedArray","TYPED_ARRAYS","drawcalls","offsets","Loader","Handlers","handlers","regex","onLoadStart","onLoadProgress","onLoadComplete","initMaterials","texturePath","createMaterial","BlendingMode","textureLoader","materialLoader","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","LoaderUtils","decodeText","TextDecoder","decode","fromCharCode","escape","extractUrlBase","lastIndexOf","JSONLoader","setTexturePath","parseModel","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","parseMorphing","dstVertices","srcVertices","morphColors","parseAnimations","outputAnimations","morphAnimationClips","ObjectLoader","substring","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","details","geometryShapes","loadImage","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","ImageBitmapLoader","createImageBitmap","fetch","setOptions","res","blob","imageBitmap","catch","ShapePath","subPaths","currentPath","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","Font","paths","createPaths","chars","line_height","yMax","yMin","underlineThickness","char","ret","createPath","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","action","ha","FontLoader","AudioContext","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","StereoCamera","eyeSep","instance","eyeRight","eyeLeft","eyeSepOnProjection","ymax","xmin","xmax","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","AudioListener","gain","createGain","connect","destination","getInput","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","setValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","autoplay","loop","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setBuffer","play","createBufferSource","onended","onEnded","pause","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","PositionalAudio","panner","createPanner","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","RESERVED_CHARS_RE","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","findNode","nodeName","root","isAnimationObjectGroup","sanitizeNodeName","reservedRe","RegExp","wordChar","wordCharOrDot","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","getValue_direct","getValue_array","resolvedProperty","getValue_arrayElement","getValue_toArray","SetterByBindingTypeAndVersioning","setValue_direct","targetObject","setValue_direct_setNeedsUpdate","setValue_direct_setMatrixWorldNeedsUpdate","setValue_array","dest","setValue_array_setNeedsUpdate","setValue_array_setMatrixWorldNeedsUpdate","setValue_arrayElement","setValue_arrayElement_setNeedsUpdate","setValue_arrayElement_setMatrixWorldNeedsUpdate","setValue_fromArray","setValue_fromArray_setNeedsUpdate","setValue_fromArray_setMatrixWorldNeedsUpdate","getValue_unbound","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","startTimeScale","endTimeScale","now","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","InstancedBufferGeometry","InterleavedBufferAttribute","interleavedBuffer","InterleavedBuffer","isInterleavedBuffer","InstancedInterleavedBuffer","InstancedBufferAttribute","Raycaster","PointCloud","ascSort","intersectObject","setFromCamera","coords","intersectObjects","Clock","autoStart","oldTime","elapsedTime","running","performance","Date","getElapsedTime","getDelta","newTime","Spherical","other","makeSafe","vec3","Cylindrical","Box2","ImmediateRenderObject","VertexNormalsHelper","nNormals","objGeometry","objPos","objNorm","SpotLightHelper","cone","coneLength","coneWidth","getBoneList","boneList","SkeletonHelper","boneMatrix","matrixWorldInv","PointLightHelper","sphereSize","RectAreaLightHelper","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","FaceNormalsHelper","DirectionalLightHelper","lightPlane","targetLine","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","BoxHelper","Box3Helper","PlaneHelper","positions2","lineGeometry","coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setColor","AxesHelper","Face4","LineStrip","LinePieces","MeshFaceMaterial","MultiMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","ClosedSplineCurve3","SplineCurve3","Spline","initFromArray","getControlPointsArray","reparametrizeByArcLength","AxisHelper","BoundingBoxHelper","EdgesHelper","setColors","WireframeHelper","XHRLoader","BinaryTextureLoader","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","copyIndicesArray","addIndex","addDrawCall","clearDrawCalls","computeOffsets","getArrays","addShapeList","wrapAround","wrapRGB","metal","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","shadowMapCullFace","renderReverseSided","renderSingleSided","standing","audioLoader","getData","updateCubeMap","GeometryUtils","geometry1","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","Projector","projectVector","unprojectVector","pickingRay","CanvasRenderer","SceneUtils","createMultiMaterialObject","detach","attach","LensFlare","CubeGeometry","createCelestialObjectsFromArray","createCelestialObject","require","drawOrbitsFromArray","drawOrbit","findRoot","deltaT","animationSpeed","meanAnomaly","getMeanAnomaly","eccentricAnomaly","getEccentricAnomaly","trueAnomaly","getTrueAnomaly","getRadius","objectToDraw","parentBody","coordinates","orbitCoordinates","mean_anomaly","newMeanAnomaly","period","eccentricity","fp","semimajor_axis","true_anomaly","longitude","periapsis_arg","createSky","sky","OrbitControls","controls","containerId","getElementById","devicePixelRatio","clientWidth","clientHeight","appendChild","innerWidth","innerHeight","ambientLight","onWindowResize","planetarySystems","CelestialObjects","bundleURL","getBundleURLCached","getBundleURL","err","stack","getBaseURL","exports","bundle","updateLink","link","newLink","cloneNode","onload","href","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","module"],"mappings":"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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Solar-System-threejs.0b340d83.map","sourceRoot":"..","sourcesContent":["export function isOrbiting(celestialObject) {\n  var centerArray = (celestialObject.center).split(\" \", 3);\n  if (isNaN(parseFloat(centerArray[0])) === false && isNaN(parseFloat(centerArray[1])) === false && isNaN(parseFloat(centerArray[2])) === false) {\n    //Has valid coordinates\n    return false;\n  } else {\n    //Is orbiting something else\n    return true;\n  }\n}\n\n//Search for array for the the parent body\nexport function getParentBody(celestialObject, celestialObjectArray) {\n  for (var i = 0; i < celestialObjectArray.length; i++) {\n    if (celestialObjectArray[i].name === celestialObject.center) {\n      //Found the parent body\n      return {\n        inclination: celestialObjectArray[i].inclination\n      }\n    }\n  }\n}\n\nexport function wrapNumber(number, wrap) {\n  if (number > wrap) {\n    return number - (number - (number % wrap))\n  } else {\n    return number;\n  }\n}\n\nexport function checkDegToRad(number) {\n  var numberArray = number.split(\" \", 2);\n  var parsedNum = parseFloat(numberArray[0]);\n  if (typeof parsedNum === \"number\" && numberArray[1] === \"deg\") {\n    //Is degree\n    return parsedNum * Math.PI / 180;\n  } else {\n    //Is not degree\n    return parsedNum;\n  }\n}\n\nexport function radtoDeg(number) {\n  return number * 180 / Math.PI;\n}\n\nexport function hexToRgb(hex) {\n    // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n    var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, function(m, r, g, b) {\n        return r + r + g + g + b + b;\n    });\n\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return  (\n        \"rgb(\"+parseInt(result[1], 16)+\", \"+parseInt(result[2], 16)+\", \"+parseInt(result[3], 16)+\")\"\n    )\n}\n","// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( 'name' in Function.prototype === false ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t( function () {\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t} )();\n\n}\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nvar REVISION = '94';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RGB_S3TC_DXT1_Format = 33776;\nvar RGBA_S3TC_DXT1_Format = 33777;\nvar RGBA_S3TC_DXT3_Format = 33778;\nvar RGBA_S3TC_DXT5_Format = 33779;\nvar RGB_PVRTC_4BPPV1_Format = 35840;\nvar RGB_PVRTC_2BPPV1_Format = 35841;\nvar RGBA_PVRTC_4BPPV1_Format = 35842;\nvar RGBA_PVRTC_2BPPV1_Format = 35843;\nvar RGB_ETC1_Format = 36196;\nvar RGBA_ASTC_4x4_Format = 37808;\nvar RGBA_ASTC_5x4_Format = 37809;\nvar RGBA_ASTC_5x5_Format = 37810;\nvar RGBA_ASTC_6x5_Format = 37811;\nvar RGBA_ASTC_6x6_Format = 37812;\nvar RGBA_ASTC_8x5_Format = 37813;\nvar RGBA_ASTC_8x6_Format = 37814;\nvar RGBA_ASTC_8x8_Format = 37815;\nvar RGBA_ASTC_10x5_Format = 37816;\nvar RGBA_ASTC_10x6_Format = 37817;\nvar RGBA_ASTC_10x8_Format = 37818;\nvar RGBA_ASTC_10x10_Format = 37819;\nvar RGBA_ASTC_12x10_Format = 37820;\nvar RGBA_ASTC_12x12_Format = 37821;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\nvar TangentSpaceNormalMap = 0;\nvar ObjectSpaceNormalMap = 1;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector2();\n\t\tvar max = new Vector2();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function () {\n\n\t\tvar zero = new Vector3( 0, 0, 0 );\n\t\tvar one = new Vector3( 1, 1, 1 );\n\n\t\treturn function makeRotationFromQuaternion( q ) {\n\n\t\t\treturn this.compose( zero, q, one );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( v ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 12 ] = v.x;\n\t\tte[ 13 ] = v.y;\n\t\tte[ 14 ] = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t        te[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t        te[ 1 ] = ( xy + wz ) * sx;\n\t        te[ 2 ] = ( xz - wy ) * sx;\n\t        te[ 3 ] = 0;\n\n\t        te[ 4 ] = ( xy - wz ) * sy;\n\t        te[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t        te[ 6 ] = ( yz + wx ) * sy;\n\t        te[ 7 ] = 0;\n\n\t        te[ 8 ] = ( xz + wy ) * sz;\n\t        te[ 9 ] = ( yz - wx ) * sz;\n\t        te[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t        te[ 11 ] = 0;\n\n\t        te[ 12 ] = position.x;\n\t        te[ 13 ] = position.y;\n\t        te[ 14 ] = position.z;\n\t        te[ 15 ] = 1;\n\n\t        return this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function () {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar v1 = new Vector3();\n\t\tvar r;\n\n\t\tvar EPS = 0.000001;\n\n\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t}\n\n\t\t\tthis._x = v1.x;\n\t\t\tthis._y = v1.y;\n\t\t\tthis._z = v1.z;\n\t\t\tthis._w = r;\n\n\t\t\treturn this.normalize();\n\n\t\t};\n\n\t}(),\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\treturn this.normalize();\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function project( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\tunproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function unproject( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector3();\n\t\tvar max = new Vector3();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\tthis.x = c.radius * Math.sin( c.theta );\n\t\tthis.y = c.y;\n\t\tthis.z = c.radius * Math.cos( c.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tvar c = Math.cos( rotation );\n\t\tvar s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t},\n\n\tscale: function ( sx, sy ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t},\n\n\trotate: function ( theta ) {\n\n\t\tvar c = Math.cos( theta );\n\t\tvar s = Math.sin( theta );\n\n\t\tvar te = this.elements;\n\n\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( tx, ty ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tfunction getDataURL( image ) {\n\n\t\t\tvar canvas;\n\n\t\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tcanvas = image;\n\n\t\t\t} else {\n\n\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = image.width;\n\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\n\t\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t} else {\n\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tvar url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\turl.push( getDataURL( image[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = getDataURL( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new Vector4();\n\t\t\t\tmax = new Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : true;\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\tthis.activeMipMapLevel = 0;\n\n}\n\nWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data, width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tvar scope, i, l;\n\n\t\tvar v1 = new Vector3();\n\n\t\tfunction traverse( node ) {\n\n\t\t\tvar geometry = node.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function expandByObject( object ) {\n\n\t\t\tscope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( traverse );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: ( function () {\n\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t};\n\n\t} )(),\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= plane.constant && max >= plane.constant );\n\n\t},\n\n\tintersectsTriangle: ( function () {\n\n\t\t// triangle centered vertices\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\t// triangle edge vectors\n\t\tvar f0 = new Vector3();\n\t\tvar f1 = new Vector3();\n\t\tvar f2 = new Vector3();\n\n\t\tvar testAxis = new Vector3();\n\n\t\tvar center = new Vector3();\n\t\tvar extents = new Vector3();\n\n\t\tvar triangleNormal = new Vector3();\n\n\t\tfunction satForAxes( axes ) {\n\n\t\t\tvar i, j;\n\n\t\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t\ttestAxis.fromArray( axes, i );\n\t\t\t\t// project the aabb onto the seperating axis\n\t\t\t\tvar r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\n\t\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\t\tvar p0 = v0.dot( testAxis );\n\t\t\t\tvar p1 = v1.dot( testAxis );\n\t\t\t\tvar p2 = v2.dot( testAxis );\n\t\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn function intersectsTriangle( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( center );\n\t\t\textents.subVectors( this.max, center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\tv0.subVectors( triangle.a, center );\n\t\t\tv1.subVectors( triangle.b, center );\n\t\t\tv2.subVectors( triangle.c, center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\tf0.subVectors( v1, v0 );\n\t\t\tf1.subVectors( v2, v1 );\n\t\t\tf2.subVectors( v0, v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\n\t\t\t\tf0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\n\t\t\t\t- f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\ttriangleNormal.crossVectors( f0, f1 );\n\t\t\taxes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\n\t\t\treturn satForAxes( axes );\n\n\t\t};\n\n\t} )(),\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getBoundingSphere( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\ttarget = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty( ) ) return this;\n\n\t\tvar m = matrix.elements;\n\n\t\tvar xax = m[ 0 ] * this.min.x, xay = m[ 1 ] * this.min.x, xaz = m[ 2 ] * this.min.x;\n\t\tvar xbx = m[ 0 ] * this.max.x, xby = m[ 1 ] * this.max.x, xbz = m[ 2 ] * this.max.x;\n\t\tvar yax = m[ 4 ] * this.min.y, yay = m[ 5 ] * this.min.y, yaz = m[ 6 ] * this.min.y;\n\t\tvar ybx = m[ 4 ] * this.max.y, yby = m[ 5 ] * this.max.y, ybz = m[ 6 ] * this.max.y;\n\t\tvar zax = m[ 8 ] * this.min.z, zay = m[ 9 ] * this.min.z, zaz = m[ 10 ] * this.min.z;\n\t\tvar zbx = m[ 8 ] * this.max.z, zby = m[ 9 ] * this.max.z, zbz = m[ 10 ] * this.max.z;\n\n\t\tthis.min.x = Math.min( xax, xbx ) + Math.min( yax, ybx ) + Math.min( zax, zbx ) + m[ 12 ];\n\t\tthis.min.y = Math.min( xay, xby ) + Math.min( yay, yby ) + Math.min( zay, zby ) + m[ 13 ];\n\t\tthis.min.z = Math.min( xaz, xbz ) + Math.min( yaz, ybz ) + Math.min( zaz, zbz ) + m[ 14 ];\n\t\tthis.max.x = Math.max( xax, xbx ) + Math.max( yax, ybx ) + Math.max( zax, zbx ) + m[ 12 ];\n\t\tthis.max.y = Math.max( xay, xby ) + Math.max( yay, yby ) + Math.max( zay, zby ) + m[ 13 ];\n\t\tthis.max.z = Math.max( xaz, xbz ) + Math.max( yaz, ybz ) + Math.max( zaz, zbz ) + m[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t},\n\n\tgetBoundingBox: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectLine( line, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar m1 = new Matrix3();\n\n\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsObject( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSprite: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p1 = new Vector3(),\n\t\t\tp2 = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\n\t\t\t\t// if both outside plane, no intersection\n\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\nvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\nvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\\n\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\nvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\nvar fog_vertex = \"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n\";\n\nvar lights_pars_maps = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\\n\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\\n\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\nvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n\";\n\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\nvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\nvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars_begin>\\n#include <lights_pars_maps>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_pars_maps: lights_pars_maps,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert\n};\n\n/**\n * Uniform Utilities\n */\n\nvar UniformsUtils = {\n\n\tmerge: function ( uniforms ) {\n\n\t\tvar merged = {};\n\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t},\n\n\tclone: function ( uniforms_src ) {\n\n\t\tvar uniforms_dst = {};\n\n\t\tfor ( var u in uniforms_src ) {\n\n\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn uniforms_dst;\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function () {\n\n\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\tif ( t < 0 ) t += 1;\n\t\t\tif ( t > 1 ) t -= 1;\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\treturn p;\n\n\t\t}\n\n\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopySRGBToLinear: function () {\n\n\t\tfunction SRGBToLinear( c ) {\n\n\t\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t\t}\n\n\t\treturn function copySRGBToLinear( color ) {\n\n\t\t\tthis.r = SRGBToLinear( color.r );\n\t\t\tthis.g = SRGBToLinear( color.g );\n\t\t\tthis.b = SRGBToLinear( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcopyLinearToSRGB: function () {\n\n\t\tfunction LinearToSRGB( c ) {\n\n\t\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n\t\t}\n\n\t\treturn function copyLinearToSRGB( color ) {\n\n\t\t\tthis.r = LinearToSRGB( color.r );\n\t\t\tthis.g = LinearToSRGB( color.g );\n\t\t\tthis.b = LinearToSRGB( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tconvertSRGBToLinear: function () {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToSRGB: function () {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function () {\n\n\t\tvar hsl = {};\n\n\t\treturn function ( h, s, l ) {\n\n\t\t\tthis.getHSL( hsl );\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearCoat: { value: 0 },\n\t\t\tclearCoatRoughness: { value: 0 }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAnimation() {\n\n\tvar context = null;\n\tvar isAnimating = false;\n\tvar animationLoop = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tif ( isAnimating === false ) return;\n\n\t\tanimationLoop( time, frame );\n\n\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl ) {\n\n\tvar buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = gl.FLOAT;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( attribute.dynamic === false ) {\n\n\t\t\tgl.bufferData( bufferType, array, gl.STATIC_DRAW );\n\n\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateOnWorldAxis: function () {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnWorldAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function translateX( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function translateY( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function translateZ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function worldToLocal( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This method does not support objects with rotated and/or translated parent(s)\n\n\t\tvar m1 = new Matrix4();\n\t\tvar vector = new Vector3();\n\n\t\treturn function lookAt( x, y, z ) {\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\tvector.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tif ( this.isCamera ) {\n\n\t\t\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\t\t} else {\n\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar scale = new Vector3();\n\n\t\treturn function getWorldQuaternion( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\ttarget = new Quaternion();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, target, scale );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldScale( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, target );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn target.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.geometry !== undefined ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\tthis.projectionMatrix = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn target.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = left;\n\tthis.right = right;\n\tthis.top = top;\n\tthis.bottom = bottom;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar geometryId = 0; // Geometry uses even numbers as Id\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Geometry,\n\n\tisGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tvar tempNormals = [];\n\t\tvar tempUVs = [];\n\t\tvar tempUVs2 = [];\n\n\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n\tthis.userData = {};\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\treturn this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tremoveAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tvar position = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.length * 3, 3 );\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new Box3();\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tbox.setFromBufferAttribute( position );\n\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.x = position.getX( i );\n\t\t\t\t\tvector.y = position.getY( i );\n\t\t\t\t\tvector.z = position.getZ( i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\t\tvar groups = this.groups;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tthis.addGroup( 0, indices.length );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n\t\t\t\t\tvar group = groups[ j ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function normalizeNormals() {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\tvector.normalize();\n\n\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoNonIndexed: function () {\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: array\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: attribute.normalized\n\t\t\t};\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\tthis.mergeVertices();\n\n}\n\nBoxGeometry.prototype = Object.create( Geometry.prototype );\nBoxGeometry.prototype.constructor = BoxGeometry;\n\n// BoxBufferGeometry\n\nfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'BoxBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tvar scope = this;\n\n\twidth = width || 1;\n\theight = height || 1;\n\tdepth = depth || 1;\n\n\t// segments\n\n\twidthSegments = Math.floor( widthSegments ) || 1;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar numberOfVertices = 0;\n\tvar groupStart = 0;\n\n\t// build each side of the box geometry\n\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\tvar segmentWidth = width / gridX;\n\t\tvar segmentHeight = height / gridY;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar vertexCounter = 0;\n\t\tvar groupCount = 0;\n\n\t\tvar ix, iy;\n\n\t\tvar vector = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = 0;\n\t\t\t\tvector[ v ] = 0;\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// uvs\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t// counters\n\n\t\t\t\tvertexCounter += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\t// 1. you need three indices to draw a single face\n\t\t// 2. a single segment consists of two faces\n\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// increase counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t\t// update total number of vertices\n\n\t\tnumberOfVertices += vertexCounter;\n\n\t}\n\n}\n\nBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\tthis.lights = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\tthis.visible = true;\n\n\tthis.userData = {};\n\n\tthis.needsUpdate = true;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.overdraw = source.overdraw;\n\n\t\tthis.visible = source.visible;\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.clipShadows = source.clipShadows;\n\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = this.uniforms;\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\treturn data;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function recast( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tvar directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceToSquared( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function () {\n\n\t\tvar segCenter = new Vector3();\n\t\tvar segDir = new Vector3();\n\t\tvar diff = new Vector3();\n\n\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\tvar c = diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t};\n\n\t}(),\n\n\tintersectSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectSphere( sphere, target ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = v1.dot( this.direction );\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, target ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, target ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t},\n\n\tintersectsBox: ( function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t} )(),\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new Vector3();\n\t\tvar edge1 = new Vector3();\n\t\tvar edge2 = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\treturn function intersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new Vector3();\n\t\tvar startEnd = new Vector3();\n\n\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tgetNormal: function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function getNormal( a, b, c, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\ttarget.cross( v0 );\n\n\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t};\n\n\t}(),\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tgetBarycoord: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function getBarycoord( point, a, b, c, target ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tTriangle.getBarycoord( point, a, b, c, v1 );\n\n\t\t\treturn ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 );\n\n\t\t};\n\n\t}()\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tgetArea: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getArea() {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tgetMidpoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tgetNormal: function ( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t},\n\n\tgetPlane: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tgetBarycoord: function ( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t},\n\n\tclosestPointToPoint: function () {\n\n\t\tvar plane = new Plane();\n\t\tvar edgeList = [ new Line3(), new Line3(), new Line3() ];\n\t\tvar projectedPoint = new Vector3();\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function closestPointToPoint( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar minDistance = Infinity;\n\n\t\t\t// project the point onto the plane of the triangle\n\n\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\n\t\t\tplane.projectPoint( point, projectedPoint );\n\n\t\t\t// check if the projection lies within the triangle\n\n\t\t\tif ( this.containsPoint( projectedPoint ) === true ) {\n\n\t\t\t\t// if so, this is the closest point\n\n\t\t\t\ttarget.copy( projectedPoint );\n\n\t\t\t} else {\n\n\t\t\t\t// if not, the point falls outside the triangle. the target is the closest point to the triangle's edges or vertices\n\n\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\n\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\n\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\n\n\t\t\t\tfor ( var i = 0; i < edgeList.length; i ++ ) {\n\n\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\n\n\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\n\n\t\t\t\t\tif ( distance < minDistance ) {\n\n\t\t\t\t\t\tminDistance = distance;\n\n\t\t\t\t\t\ttarget.copy( closestPoint );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.drawMode = source.drawMode;\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\tname = morphTargets[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar tempA = new Vector3();\n\t\tvar tempB = new Vector3();\n\t\tvar tempC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tvar barycoord = new Vector3();\n\n\t\tvar intersectionPoint = new Vector3();\n\t\tvar intersectionPointWorld = new Vector3();\n\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n\t\t\tTriangle.getBarycoord( point, p1, p2, p3, barycoord );\n\n\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\tuv3.multiplyScalar( barycoord.z );\n\n\t\t\tuv1.add( uv2 ).add( uv3 );\n\n\t\t\treturn uv1.clone();\n\n\t\t}\n\n\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\tvar intersect;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t} else {\n\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t}\n\n\t\t\tif ( intersect === null ) return null;\n\n\t\t\tintersectionPointWorld.copy( point );\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\treturn {\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\tobject: object\n\t\t\t};\n\n\t\t}\n\n\t\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, uv, a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\tvar intersection = checkIntersection( object, material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\tif ( intersection ) {\n\n\t\t\t\tif ( uv ) {\n\n\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\n\n\t\t\t\t}\n\n\t\t\t\tvar face = new Face3( a, b, c );\n\t\t\t\tTriangle.getNormal( vA, vB, vC, face.normal );\n\n\t\t\t\tintersection.face = face;\n\n\t\t\t}\n\n\t\t\treturn intersection;\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar drawRange = geometry.drawRange;\n\t\t\t\tvar i, j, il, jl;\n\t\t\t\tvar group, groupMaterial;\n\t\t\t\tvar start, end;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = j;\n\t\t\t\t\t\t\t\tb = j + 1;\n\t\t\t\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeCamera, planeMesh;\n\tvar boxMesh;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && background.isCubeTexture ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tuniforms: ShaderLib.cube.uniforms,\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.tCube.value = background;\n\n\t\t\trenderList.push( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeCamera === undefined ) {\n\n\t\t\t\tplaneCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n\t\t\t\t);\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.map = background;\n\n\t\t\t// TODO Push this to renderList\n\n\t\t\trenderer.renderBufferDirect( planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, info ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\textension.drawArraysInstancedANGLE( mode, start, count, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\treturn {\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, info ) {\n\n\tvar geometries = {};\n\tvar wireframeAttributes = {};\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\t// TODO Remove duplicate code\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ geometry.id ];\n\n\t\t}\n\n\t\tattribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) return attribute;\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// console.time( 'wireframe' );\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.timeEnd( 'wireframe' );\n\n\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\treturn attribute;\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\textension.drawElementsInstancedANGLE( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLInfo( gl ) {\n\n\tvar memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tvar render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\tinstanceCount = instanceCount || 1;\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.TRIANGLE_STRIP:\n\t\t\tcase gl.TRIANGLE_FAN:\n\t\t\t\trender.triangles += instanceCount * ( count - 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\tvar length = objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t// Remove current morphAttributes\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\t// Add morphAttributes\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence ) {\n\n\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\tif ( value ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( geometries, info ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n * @author Mugen87 / https://github.com/Mugen87\n * @author mrdoob / http://mrdoob.com/\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [renderer] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'renderer' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (renderer factorizations):\n *\n * .upload( gl, seq, values, renderer )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (renderer factorizations):\n *\n * .setValue( gl, name, value )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .set( gl, obj, prop )\n *\n * \t\tsets uniform from object and property with same name than uniform\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Base for inner nodes (including the root) ---\n\nfunction UniformContainer() {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\nvar mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( renderer, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = renderer.allocTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValue1f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValue1i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValue2fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue3fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue4fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValue2fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue3fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue4fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValue2iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue3iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue4iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// Array of scalars\n\nfunction setValue1fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1fv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\nfunction setValue1iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 2 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform2fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 3 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform3fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform4fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 9 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 16 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1a( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( renderer, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6a( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( renderer, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tvar cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tUniformContainer.call( this ); // mix-in\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value ) {\n\n\t// Note: Don't need an extra 'renderer' parameter, since samplers\n\t// are not allowed in structured uniforms.\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ] );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program, renderer ) {\n\n\tUniformContainer.call( this );\n\n\tthis.renderer = renderer;\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t}\n\n\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t}\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\textensions = extensions || {};\n\n\tvar chunks = [\n\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || ( parameters.normalMap && ! parameters.objectSpaceNormalMap ) || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\nfunction parseIncludes( string ) {\n\n\tvar pattern = /^[ \\t]*#include +<([\\w\\d.]+)>/gm;\n\n\tfunction replace( match, include ) {\n\n\t\tvar replace = ShaderChunk[ include ];\n\n\t\tif ( replace === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn parseIncludes( replace );\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction unrollLoops( string ) {\n\n\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\tfunction replace( match, start, end, snippet ) {\n\n\t\tvar unroll = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t}\n\n\t\treturn unroll;\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction WebGLProgram( renderer, extensions, code, material, shader, parameters ) {\n\n\tvar gl = renderer.context;\n\n\tvar defines = material.defines;\n\n\tvar vertexShader = shader.vertexShader;\n\tvar fragmentShader = shader.fragmentShader;\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t}\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t// console.log( 'building new program ' );\n\n\t//\n\n\tvar customExtensions = generateExtensions( material.extensions, parameters, extensions );\n\n\tvar customDefines = generateDefines( defines );\n\n\t//\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tif ( material.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\tparameters.envMap && extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = parseIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = parseIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( material.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\tvar runnable = true;\n\tvar haveDiagnostics = true;\n\n\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\trunnable = false;\n\n\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t} else if ( programLog !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\thaveDiagnostics = false;\n\n\t}\n\n\tif ( haveDiagnostics ) {\n\n\t\tthis.diagnostics = {\n\n\t\t\trunnable: runnable,\n\t\t\tmaterial: material,\n\n\t\t\tprogramLog: programLog,\n\n\t\t\tvertexShader: {\n\n\t\t\t\tlog: vertexLog,\n\t\t\t\tprefix: prefixVertex\n\n\t\t\t},\n\n\t\t\tfragmentShader: {\n\n\t\t\t\tlog: fragmentLog,\n\t\t\t\tprefix: prefixFragment\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program, renderer );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t// DEPRECATED\n\n\tObject.defineProperties( this, {\n\n\t\tuniforms: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\treturn this.getUniforms();\n\n\t\t\t}\n\t\t},\n\n\t\tattributes: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\treturn this.getAttributes();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\n\t//\n\n\tthis.name = shader.name;\n\tthis.id = programIdCount ++;\n\tthis.code = code;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\n\tvar programs = [];\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t];\n\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\tvar precision = capabilities.precision;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\tarray.push( renderer.gammaOutput );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tvar map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program && b.program && a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction push( object, geometry, material, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t\trenderItemsIndex ++;\n\n\t}\n\n\tfunction sort() {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar hash = scene.id + ',' + camera.id;\n\t\tvar list = lists[ hash ];\n\n\t\tif ( list === undefined ) {\n\n\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists[ hash ] = list;\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nvar count = 0;\n\nfunction WebGLLights() {\n\n\tvar cache = new UniformsCache();\n\n\tvar state = {\n\n\t\tid: count ++,\n\n\t\thash: '',\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t}\n\n\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tstate.directional.length = directionalLength;\n\t\tstate.spot.length = spotLength;\n\t\tstate.rectArea.length = rectAreaLength;\n\t\tstate.point.length = pointLength;\n\t\tstate.hemi.length = hemiLength;\n\n\t\tstate.hash = state.id + ',' + directionalLength + ',' + pointLength + ',' + spotLength + ',' + rectAreaLength + ',' + hemiLength + ',' + shadows.length;\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLRenderState() {\n\n\tvar lights = new WebGLLights();\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\tvar spritesArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\t\tspritesArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction pushSprite( sprite ) {\n\n\t\tspritesArray.push( sprite );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tvar state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\t\tspritesArray: spritesArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow,\n\t\tpushSprite: pushSprite\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tvar renderStates = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar hash = scene.id + ',' + camera.id;\n\n\t\tvar renderState = renderStates[ hash ];\n\n\t\tif ( renderState === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates[ hash ] = renderState;\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tvar cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tvar cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n\tvar cube2DViewPorts = [\n\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\tnew Vector4(), new Vector4(), new Vector4()\n\t];\n\n\t// init\n\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t//\n\n\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t}\n\n\t//\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\t// TODO Clean up (needed in case of contextlost)\n\t\tvar _gl = _renderer.context;\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.disable( _gl.BLEND );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tvar faceCount;\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative X\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Z\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative Z\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Y\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t// negative Y\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\tshadow.update( light );\n\n\t\t\t}\n\n\t\t\tvar shadowMap = shadow.map;\n\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tfaceCount = 6;\n\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t} else {\n\n\t\t\t\tfaceCount = 1;\n\n\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t// compute shadow matrix\n\n\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t);\n\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t// run a single pass if not\n\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t};\n\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar materialVariants = _depthMaterials;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( ! customMaterial ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t}\n\n\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\tvar variantIndex = 0;\n\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\nCanvasTexture.prototype.isCanvasTexture = true;\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction WebGLSpriteRenderer( renderer, gl, state, textures, capabilities ) {\n\n\tvar vertexBuffer, elementBuffer;\n\tvar program, attributes, uniforms;\n\n\tvar texture;\n\n\t// decompose matrixWorld\n\n\tvar spritePosition = new Vector3();\n\tvar spriteRotation = new Quaternion();\n\tvar spriteScale = new Vector3();\n\n\tfunction init() {\n\n\t\tvar vertices = new Float32Array( [\n\t\t\t- 0.5, - 0.5, 0, 0,\n\t\t\t  0.5, - 0.5, 1, 0,\n\t\t\t  0.5, 0.5, 1, 1,\n\t\t\t- 0.5, 0.5, 0, 1\n\t\t] );\n\n\t\tvar faces = new Uint16Array( [\n\t\t\t0, 1, 2,\n\t\t\t0, 2, 3\n\t\t] );\n\n\t\tvertexBuffer = gl.createBuffer();\n\t\telementBuffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\tprogram = createProgram();\n\n\t\tattributes = {\n\t\t\tposition: gl.getAttribLocation( program, 'position' ),\n\t\t\tuv: gl.getAttribLocation( program, 'uv' )\n\t\t};\n\n\t\tuniforms = {\n\t\t\tuvOffset: gl.getUniformLocation( program, 'uvOffset' ),\n\t\t\tuvScale: gl.getUniformLocation( program, 'uvScale' ),\n\n\t\t\trotation: gl.getUniformLocation( program, 'rotation' ),\n\t\t\tcenter: gl.getUniformLocation( program, 'center' ),\n\t\t\tscale: gl.getUniformLocation( program, 'scale' ),\n\n\t\t\tcolor: gl.getUniformLocation( program, 'color' ),\n\t\t\tmap: gl.getUniformLocation( program, 'map' ),\n\t\t\topacity: gl.getUniformLocation( program, 'opacity' ),\n\n\t\t\tmodelViewMatrix: gl.getUniformLocation( program, 'modelViewMatrix' ),\n\t\t\tprojectionMatrix: gl.getUniformLocation( program, 'projectionMatrix' ),\n\n\t\t\tfogType: gl.getUniformLocation( program, 'fogType' ),\n\t\t\tfogDensity: gl.getUniformLocation( program, 'fogDensity' ),\n\t\t\tfogNear: gl.getUniformLocation( program, 'fogNear' ),\n\t\t\tfogFar: gl.getUniformLocation( program, 'fogFar' ),\n\t\t\tfogColor: gl.getUniformLocation( program, 'fogColor' ),\n\t\t\tfogDepth: gl.getUniformLocation( program, 'fogDepth' ),\n\n\t\t\talphaTest: gl.getUniformLocation( program, 'alphaTest' )\n\t\t};\n\n\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\tcanvas.width = 8;\n\t\tcanvas.height = 8;\n\n\t\tvar context = canvas.getContext( '2d' );\n\t\tcontext.fillStyle = 'white';\n\t\tcontext.fillRect( 0, 0, 8, 8 );\n\n\t\ttexture = new CanvasTexture( canvas );\n\n\t}\n\n\tthis.render = function ( sprites, scene, camera ) {\n\n\t\tif ( sprites.length === 0 ) return;\n\n\t\t// setup gl\n\n\t\tif ( program === undefined ) {\n\n\t\t\tinit();\n\n\t\t}\n\n\t\tstate.useProgram( program );\n\n\t\tstate.initAttributes();\n\t\tstate.enableAttribute( attributes.position );\n\t\tstate.enableAttribute( attributes.uv );\n\t\tstate.disableUnusedAttributes();\n\n\t\tstate.disable( gl.CULL_FACE );\n\t\tstate.enable( gl.BLEND );\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\tgl.uniform1i( uniforms.map, 0 );\n\n\t\tvar oldFogType = 0;\n\t\tvar sceneFogType = 0;\n\t\tvar fog = scene.fog;\n\n\t\tif ( fog ) {\n\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n\t\t\t\toldFogType = 1;\n\t\t\t\tsceneFogType = 1;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n\t\t\t\toldFogType = 2;\n\t\t\t\tsceneFogType = 2;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\n\t\t\toldFogType = 0;\n\t\t\tsceneFogType = 0;\n\n\t\t}\n\n\n\t\t// update positions and sort\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\n\n\t\t}\n\n\t\tsprites.sort( painterSortStable );\n\n\t\t// render all sprites\n\n\t\tvar scale = [];\n\t\tvar center = [];\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\t\t\tvar material = sprite.material;\n\n\t\t\tif ( material.visible === false ) continue;\n\n\t\t\tsprite.onBeforeRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\n\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\n\n\t\t\tscale[ 0 ] = spriteScale.x;\n\t\t\tscale[ 1 ] = spriteScale.y;\n\n\t\t\tcenter[ 0 ] = sprite.center.x - 0.5;\n\t\t\tcenter[ 1 ] = sprite.center.y - 0.5;\n\n\t\t\tvar fogType = 0;\n\n\t\t\tif ( scene.fog && material.fog ) {\n\n\t\t\t\tfogType = sceneFogType;\n\n\t\t\t}\n\n\t\t\tif ( oldFogType !== fogType ) {\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n\t\t\t\toldFogType = fogType;\n\n\t\t\t}\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n\t\t\t} else {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\n\t\t\t}\n\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n\t\t\tgl.uniform2fv( uniforms.center, center );\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\n\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\t\t\tstate.buffers.depth.setTest( material.depthTest );\n\t\t\tstate.buffers.depth.setMask( material.depthWrite );\n\t\t\tstate.buffers.color.setMask( material.colorWrite );\n\n\t\t\ttextures.setTexture2D( material.map || texture, 0 );\n\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\tsprite.onAfterRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t}\n\n\t\t// restore gl\n\n\t\tstate.enable( gl.CULL_FACE );\n\n\t\tstate.reset();\n\n\t};\n\n\tfunction createProgram() {\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\n\t\tgl.shaderSource( vertexShader, [\n\n\t\t\t'precision ' + capabilities.precision + ' float;',\n\n\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform float rotation;',\n\t\t\t'uniform vec2 center;',\n\t\t\t'uniform vec2 scale;',\n\t\t\t'uniform vec2 uvOffset;',\n\t\t\t'uniform vec2 uvScale;',\n\n\t\t\t'attribute vec2 position;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'varying vec2 vUV;',\n\t\t\t'varying float fogDepth;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvUV = uvOffset + uv * uvScale;',\n\n\t\t\t'\tvec2 alignedPosition = ( position - center ) * scale;',\n\n\t\t\t'\tvec2 rotatedPosition;',\n\t\t\t'\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n\t\t\t'\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n\t\t\t'\tvec4 mvPosition;',\n\n\t\t\t'\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n\t\t\t'\tmvPosition.xy += rotatedPosition;',\n\n\t\t\t'\tgl_Position = projectionMatrix * mvPosition;',\n\n\t\t\t'\tfogDepth = - mvPosition.z;',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.shaderSource( fragmentShader, [\n\n\t\t\t'precision ' + capabilities.precision + ' float;',\n\n\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t'uniform vec3 color;',\n\t\t\t'uniform sampler2D map;',\n\t\t\t'uniform float opacity;',\n\n\t\t\t'uniform int fogType;',\n\t\t\t'uniform vec3 fogColor;',\n\t\t\t'uniform float fogDensity;',\n\t\t\t'uniform float fogNear;',\n\t\t\t'uniform float fogFar;',\n\t\t\t'uniform float alphaTest;',\n\n\t\t\t'varying vec2 vUV;',\n\t\t\t'varying float fogDepth;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvec4 texture = texture2D( map, vUV );',\n\n\t\t\t'\tgl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n\t\t\t'\tif ( gl_FragColor.a < alphaTest ) discard;',\n\n\t\t\t'\tif ( fogType > 0 ) {',\n\n\t\t\t'\t\tfloat fogFactor = 0.0;',\n\n\t\t\t'\t\tif ( fogType == 1 ) {',\n\n\t\t\t'\t\t\tfogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n\n\t\t\t'\t\t} else {',\n\n\t\t\t'\t\t\tconst float LOG2 = 1.442695;',\n\t\t\t'\t\t\tfogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );',\n\t\t\t'\t\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n\t\t\t'\t\t}',\n\n\t\t\t'\t\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );',\n\n\t\t\t'\t}',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.compileShader( vertexShader );\n\t\tgl.compileShader( fragmentShader );\n\n\t\tgl.attachShader( program, vertexShader );\n\t\tgl.attachShader( program, fragmentShader );\n\n\t\tgl.linkProgram( program );\n\n\t\treturn program;\n\n\t}\n\n\tfunction painterSortStable( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn b.id - a.id;\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, utils ) {\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\tvar capabilities = {};\n\n\tvar compressedTextureFormats = null;\n\n\tvar currentProgram = null;\n\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tvar lineWidthAvailable = false;\n\tvar version = 0;\n\tvar glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tenable( gl.BLEND );\n\tsetBlending( NormalBlending );\n\n\t//\n\n\tfunction initAttributes() {\n\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction enable( id ) {\n\n\t\tif ( capabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tcapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( capabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tcapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction getCompressedTextureFormats() {\n\n\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\tcompressedTextureFormats = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\n\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn compressedTextureFormats;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending !== NoBlending ) {\n\n\t\t\tenable( gl.BLEND );\n\n\t\t} else {\n\n\t\t\tdisable( gl.BLEND );\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\tcase AdditiveBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase SubtractiveBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MultiplyBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentBlendEquation = null;\n\t\t\tcurrentBlendSrc = null;\n\t\t\tcurrentBlendDst = null;\n\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t} else {\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tvar flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcapabilities = {};\n\n\t\tcompressedTextureFormats = null;\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\tenable: enable,\n\t\tdisable: disable,\n\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext ); /* global WebGL2RenderingContext */\n\tvar _videoTextures = {};\n\tvar _canvas;\n\n\t//\n\n\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tif ( 'data' in image ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t// premultiplied alpha.\n\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\treturn canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction makePowerOfTwo( image ) {\n\n\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement || image instanceof ImageBitmap ) {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = _Math.floorPowerOfTwo( image.width );\n\t\t\t_canvas.height = _Math.floorPowerOfTwo( image.height );\n\n\t\t\tvar context = _canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, _canvas.width, _canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + _canvas.width + 'x' + _canvas.height, image );\n\n\t\t\treturn _canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\n\n\t\treturn texture.generateMipmaps && isPowerOfTwo &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\tdelete _videoTextures[ texture.id ];\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t// cube texture\n\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t} else {\n\n\t\t\t// 2D texture\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\t// remove all webgl properties\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, texture, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\tvar extension;\n\n\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, utils.convert( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, utils.convert( texture.wrapT ) );\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, utils.convert( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, utils.convert( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\n\n\t\t\t}\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\timage = makePowerOfTwo( image );\n\n\t\t}\n\n\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type );\n\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( ! _isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( _isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && internalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tinternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\tgenerateMipmap( _gl.TEXTURE_2D, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tvar id = texture.id;\n\t\tvar frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures[ id ] !== frame ) {\n\n\t\t\t_videoTextures[ id ] = frame;\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n}\n\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nfunction WebGLUtils( gl, extensions ) {\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === RepeatWrapping ) return gl.REPEAT;\n\t\tif ( p === ClampToEdgeWrapping ) return gl.CLAMP_TO_EDGE;\n\t\tif ( p === MirroredRepeatWrapping ) return gl.MIRRORED_REPEAT;\n\n\t\tif ( p === NearestFilter ) return gl.NEAREST;\n\t\tif ( p === NearestMipMapNearestFilter ) return gl.NEAREST_MIPMAP_NEAREST;\n\t\tif ( p === NearestMipMapLinearFilter ) return gl.NEAREST_MIPMAP_LINEAR;\n\n\t\tif ( p === LinearFilter ) return gl.LINEAR;\n\t\tif ( p === LinearMipMapNearestFilter ) return gl.LINEAR_MIPMAP_NEAREST;\n\t\tif ( p === LinearMipMapLinearFilter ) return gl.LINEAR_MIPMAP_LINEAR;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\tif ( p === AddEquation ) return gl.FUNC_ADD;\n\t\tif ( p === SubtractEquation ) return gl.FUNC_SUBTRACT;\n\t\tif ( p === ReverseSubtractEquation ) return gl.FUNC_REVERSE_SUBTRACT;\n\n\t\tif ( p === ZeroFactor ) return gl.ZERO;\n\t\tif ( p === OneFactor ) return gl.ONE;\n\t\tif ( p === SrcColorFactor ) return gl.SRC_COLOR;\n\t\tif ( p === OneMinusSrcColorFactor ) return gl.ONE_MINUS_SRC_COLOR;\n\t\tif ( p === SrcAlphaFactor ) return gl.SRC_ALPHA;\n\t\tif ( p === OneMinusSrcAlphaFactor ) return gl.ONE_MINUS_SRC_ALPHA;\n\t\tif ( p === DstAlphaFactor ) return gl.DST_ALPHA;\n\t\tif ( p === OneMinusDstAlphaFactor ) return gl.ONE_MINUS_DST_ALPHA;\n\n\t\tif ( p === DstColorFactor ) return gl.DST_COLOR;\n\t\tif ( p === OneMinusDstColorFactor ) return gl.ONE_MINUS_DST_COLOR;\n\t\tif ( p === SrcAlphaSaturateFactor ) return gl.SRC_ALPHA_SATURATE;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan(\n\t\t\t\t_Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager( renderer ) {\n\n\tvar scope = this;\n\n\tvar device = null;\n\tvar frameData = null;\n\n\tvar poseTarget = null;\n\n\tvar controllers = [];\n\tvar standingMatrix = new Matrix4();\n\tvar standingMatrixInverse = new Matrix4();\n\n\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\tframeData = new window.VRFrameData();\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t}\n\n\tvar matrixWorldInverse = new Matrix4();\n\tvar tempQuaternion = new Quaternion();\n\tvar tempPosition = new Vector3();\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\tcameraL.layers.enable( 1 );\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\tcameraR.layers.enable( 2 );\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tfunction isPresenting() {\n\n\t\treturn device !== null && device.isPresenting === true;\n\n\t}\n\n\tvar currentSize, currentPixelRatio;\n\n\tfunction onVRDisplayPresentChange() {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\tvar renderWidth = eyeParameters.renderWidth;\n\t\t\tvar renderHeight = eyeParameters.renderHeight;\n\n\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\tcurrentSize = renderer.getSize();\n\n\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t\tanimation.start();\n\n\t\t} else if ( scope.enabled ) {\n\n\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t}\n\n\t//\n\n\tvar isTriggerPressed = false;\n\n\tfunction findGamepad( id ) {\n\n\t\tvar gamepads = navigator.getGamepads && navigator.getGamepads();\n\n\t\tfor ( var i = 0, j = 0, l = gamepads.length; i < l; i ++ ) {\n\n\t\t\tvar gamepad = gamepads[ i ];\n\n\t\t\tif ( gamepad && ( gamepad.id === 'Daydream Controller' ||\n\t\t\t\tgamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' ||\n\t\t\t\tgamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) ||\n\t\t\t\tgamepad.id.startsWith( 'Spatial Controller' ) ) ) {\n\n\t\t\t\tif ( j === id ) return gamepad;\n\n\t\t\t\tj ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateControllers() {\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar gamepad = findGamepad( i );\n\n\t\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\n\n\t\t\t\tif ( gamepad.pose === null ) return;\n\n\t\t\t\t//  Pose\n\n\t\t\t\tvar pose = gamepad.pose;\n\n\t\t\t\tif ( pose.hasPosition === false ) controller.position.set( 0.2, - 0.6, - 0.05 );\n\n\t\t\t\tif ( pose.position !== null ) controller.position.fromArray( pose.position );\n\t\t\t\tif ( pose.orientation !== null ) controller.quaternion.fromArray( pose.orientation );\n\t\t\t\tcontroller.matrix.compose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrix.premultiply( standingMatrix );\n\t\t\t\tcontroller.matrix.decompose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrixWorldNeedsUpdate = true;\n\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t//  Trigger\n\n\t\t\t\tvar buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\n\n\t\t\t\tif ( isTriggerPressed !== gamepad.buttons[ buttonId ].pressed ) {\n\n\t\t\t\t\tisTriggerPressed = gamepad.buttons[ buttonId ].pressed;\n\n\t\t\t\t\tif ( isTriggerPressed ) {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectstart' } );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectend' } );\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'select' } );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.enabled = false;\n\tthis.userHeight = 1.6;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t\tanimation.setContext( value );\n\n\t};\n\n\tthis.setPoseTarget = function ( object ) {\n\n\t\tif ( object !== undefined ) poseTarget = object;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( device === null ) {\n\n\t\t\tcamera.position.set( 0, scope.userHeight, 0 );\n\t\t\treturn camera;\n\n\t\t}\n\n\t\tdevice.depthNear = camera.near;\n\t\tdevice.depthFar = camera.far;\n\n\t\tdevice.getFrameData( frameData );\n\n\t\t//\n\n\t\tvar stageParameters = device.stageParameters;\n\n\t\tif ( stageParameters ) {\n\n\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\n\t\t} else {\n\n\t\t\tstandingMatrix.makeTranslation( 0, scope.userHeight, 0 );\n\n\t\t}\n\n\n\t\tvar pose = frameData.pose;\n\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\n\n\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\t\tposeObject.matrix.copy( standingMatrix );\n\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\n\n\t\tif ( pose.orientation !== null ) {\n\n\t\t\ttempQuaternion.fromArray( pose.orientation );\n\t\t\tposeObject.quaternion.multiply( tempQuaternion );\n\n\t\t}\n\n\t\tif ( pose.position !== null ) {\n\n\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\n\t\t\ttempPosition.fromArray( pose.position );\n\t\t\ttempPosition.applyQuaternion( tempQuaternion );\n\t\t\tposeObject.position.add( tempPosition );\n\n\t\t}\n\n\t\tposeObject.updateMatrixWorld();\n\n\t\tif ( device.isPresenting === false ) return camera;\n\n\t\t//\n\n\t\tcameraL.near = camera.near;\n\t\tcameraR.near = camera.near;\n\n\t\tcameraL.far = camera.far;\n\t\tcameraR.far = camera.far;\n\n\t\tcameraVR.matrixWorld.copy( camera.matrixWorld );\n\t\tcameraVR.matrixWorldInverse.copy( camera.matrixWorldInverse );\n\n\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t// TODO (mrdoob) Double check this code\n\n\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\tvar parent = poseObject.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t}\n\n\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\t// HACK (mrdoob)\n\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t//\n\n\t\tvar layers = device.getLayers();\n\n\t\tif ( layers.length ) {\n\n\t\t\tvar layer = layers[ 0 ];\n\n\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t}\n\n\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdateControllers();\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar animation = new WebGLAnimation();\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tanimation.setAnimationLoop( callback );\n\n\t};\n\n\tthis.submitFrame = function () {\n\n\t\tif ( isPresenting() ) device.submitFrame();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebXRManager( renderer ) {\n\n\tvar gl = renderer.context;\n\n\tvar device = null;\n\tvar session = null;\n\n\tvar frameOfRef = null;\n\n\tvar pose = null;\n\n\tvar controllers = [];\n\tvar inputSources = [];\n\n\tfunction isPresenting() {\n\n\t\treturn session !== null && frameOfRef !== null;\n\n\n\t}\n\n\t//\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t\tgl.setCompatibleXRDevice( value );\n\n\t};\n\n\t//\n\n\tfunction onSessionEvent( event ) {\n\n\t\tvar controller = controllers[ inputSources.indexOf( event.inputSource ) ];\n\t\tif ( controller ) controller.dispatchEvent( { type: event.type } );\n\n\t}\n\n\tfunction onSessionEnd() {\n\n\t\trenderer.setFramebuffer( null );\n\t\tanimation.stop();\n\n\t}\n\n\tthis.setSession = function ( value, options ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\tsession.baseLayer = new XRWebGLLayer( session, gl );\n\t\t\tsession.requestFrameOfReference( options.frameOfReferenceType ).then( function ( value ) {\n\n\t\t\t\tframeOfRef = value;\n\n\t\t\t\trenderer.setFramebuffer( session.baseLayer.framebuffer );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t} );\n\n\t\t\t//\n\n\t\t\tinputSources = session.getInputSources();\n\n\t\t\tsession.addEventListener( 'inputsourceschange', function () {\n\n\t\t\t\tinputSources = session.getInputSources();\n\t\t\t\tconsole.log( inputSources );\n\n\t\t\t} );\n\n\t\t}\n\n\t};\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t}\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar parent = camera.parent;\n\t\t\tvar cameras = cameraVR.cameras;\n\n\t\t\t// apply camera.parent to cameraVR\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update camera and its children\n\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tvar children = camera.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\treturn cameraVR;\n\n\t\t}\n\n\t\treturn camera;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getDevicePose( frameOfRef );\n\n\t\tif ( pose !== null ) {\n\n\t\t\tvar layer = session.baseLayer;\n\t\t\tvar views = frame.views;\n\n\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\tvar view = views[ i ];\n\t\t\t\tvar viewport = layer.getViewport( view );\n\t\t\t\tvar viewMatrix = pose.getViewMatrix( view );\n\n\t\t\t\tvar camera = cameraVR.cameras[ i ];\n\t\t\t\tcamera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\n\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t// HACK (mrdoob)\n\t\t\t\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\t\t\t\tcameraVR.projectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar inputSource = inputSources[ i ];\n\n\t\t\tif ( inputSource ) {\n\n\t\t\t\tvar inputPose = frame.getInputPose( inputSource, frameOfRef );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\tcontroller.matrix.elements = inputPose.pointerMatrix;\n\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.rotation, controller.scale );\n\t\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcontroller.visible = false;\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\tthis.dispose = function () {};\n\n\t// DEPRECATED\n\n\tthis.getStandingMatrix = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\n\t\treturn new THREE.Matrix4();\n\n\t};\n\n\tthis.submitFrame = function () {};\n\n}\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\n\n\tvar currentRenderList = null;\n\tvar currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_framebuffer = null,\n\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\t\t_currentGeometryProgram = '',\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_usedTextureUnits = 0,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3();\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\n\t}\n\n\tvar extensions, capabilities, state, info;\n\tvar properties, textures, attributes, geometries, objects;\n\tvar programCache, renderLists, renderStates;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\tvar spriteRenderer;\n\n\tvar utils;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\t\textensions.get( 'WEBGL_depth_texture' );\n\t\textensions.get( 'OES_texture_float' );\n\t\textensions.get( 'OES_texture_float_linear' );\n\t\textensions.get( 'OES_texture_half_float' );\n\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\textensions.get( 'OES_standard_derivatives' );\n\t\textensions.get( 'OES_element_index_uint' );\n\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tstate = new WebGLState( _gl, extensions, utils );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tattributes = new WebGLAttributes( _gl );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\n\t\tobjects = new WebGLObjects( geometries, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates();\n\n\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info );\n\n\t\tspriteRenderer = new WebGLSpriteRenderer( _this, _gl, state, textures, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.context = _gl;\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// vr\n\n\tvar vr = ( 'xr' in navigator ) ? new WebXRManager( _this ) : new WebVRManager( _this );\n\n\tthis.vr = vr;\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width,\n\t\t\theight: _height\n\t\t};\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( vr.isPresenting() ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = width * _pixelRatio;\n\t\t_canvas.height = height * _pixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width * _pixelRatio,\n\t\t\theight: _height * _pixelRatio\n\t\t};\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = width * pixelRatio;\n\t\t_canvas.height = height * pixelRatio;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function () {\n\n\t\treturn _currentViewport;\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewport.set( x, _height - y - height, width, height );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t_scissor.set( x, _height - y - height, width, height );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tobjects.dispose();\n\n\t\tvr.dispose();\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program, material ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program, material );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program, material ) {\n\n\t\tstate.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\n\t\t\tif ( ! material.isMeshPhongMaterial &&\n\t\t\t\t! material.isMeshStandardMaterial &&\n\t\t\t\t! material.isMeshNormalMaterial &&\n\t\t\t\tmaterial.flatShading === true ) {\n\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\n\n\t\t\t\t\tvar array = object.normalArray;\n\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\n\n\t\t\t\t\tarray[ i + 0 ] = nx;\n\t\t\t\t\tarray[ i + 1 ] = ny;\n\t\t\t\t\tarray[ i + 2 ] = nz;\n\n\t\t\t\t\tarray[ i + 3 ] = nx;\n\t\t\t\t\tarray[ i + 4 ] = ny;\n\t\t\t\t\tarray[ i + 5 ] = nz;\n\n\t\t\t\t\tarray[ i + 6 ] = nx;\n\t\t\t\t\tarray[ i + 7 ] = ny;\n\t\t\t\t\tarray[ i + 8 ] = nz;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.normal );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs && material.map ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.uv );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors && material.vertexColors !== NoColors ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.color );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + ( material.wireframe === true );\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\n\n\t\t\t_currentGeometryProgram = geometryProgram;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = Infinity;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t}\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tfunction setupVertexAttributes( material, program, geometry ) {\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.initAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t}\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( vr.isPresenting() ) return;\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\tvr.setAnimationLoop( callback );\n\n\t\tanimation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryProgram = '';\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tcamera = vr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.onBeforeRender( _this, scene, camera, renderTarget );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, _this.sortObjects );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort();\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = null;\n\n\t\t}\n\n\t\tthis.setRenderTarget( renderTarget );\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t// custom renderers\n\n\t\tvar spritesArray = currentRenderState.state.spritesArray;\n\n\t\tspriteRenderer.render( spritesArray, scene, camera );\n\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\tif ( renderTarget ) {\n\n\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tvr.submitFrame();\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t/*\n\t// TODO Duplicated code (Frustum)\n\n\tvar _sphere = new Sphere();\n\n\tfunction isObjectViewable( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null )\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere ).\n\t\tapplyMatrix4( object.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSpriteViewable( sprite ) {\n\n\t\t_sphere.center.set( 0, 0, 0 );\n\t\t_sphere.radius = 0.7071067811865476;\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSphereViewable( sphere ) {\n\n\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\tif ( numPlanes === 0 ) return true;\n\n\t\tvar planes = _this.clippingPlanes,\n\n\t\t\tcenter = sphere.center,\n\t\t\tnegRad = - sphere.radius,\n\t\t\ti = 0;\n\n\t\tdo {\n\n\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t} while ( ++ i !== numPlanes );\n\n\t\treturn true;\n\n\t}\n\t*/\n\n\tfunction projectObject( object, camera, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushSprite( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tif ( 'viewport' in camera2 ) { // XR\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t_currentGeometryProgram = '';\n\n\t\t\trenderObjectImmediate( object, program, material );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar lights = currentRenderState.state.lights;\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.code !== code ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( materialProperties.lightsHash !== lights.state.hash ) {\n\n\t\t\tproperties.update( material, 'lightsHash', lights.state.hash );\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\n\n\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = fog;\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.lightsHash = lights.state.hash;\n\n\t\tif ( material.lights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t_usedTextureUnits = 0;\n\n\t\tvar materialProperties = properties.get( material );\n\t\tvar lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate === false ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.lights && materialProperties.lightsHash !== lights.state.hash ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\t// Avoid unneeded uniform updates per ArrayCamera's sub-camera\n\n\t\t\tif ( _currentCamera !== ( _currentArrayCamera || camera ) ) {\n\n\t\t\t\t_currentCamera = ( _currentArrayCamera || camera );\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value = material.color;\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value = fog.color;\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value = material.specular;\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\trefreshUniformsPhong( uniforms, material );\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\t// Textures\n\n\tfunction allocTextureUnit() {\n\n\t\tvar textureUnit = _usedTextureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\t_usedTextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tthis.allocTextureUnit = allocTextureUnit;\n\n\t// this.setTexture2D = setTexture2D;\n\tthis.setTexture2D = ( function () {\n\n\t\tvar warned = false;\n\n\t\t// backwards compatibility: peel texture.texture\n\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTexture = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTexture( texture, slot ) {\n\n\t\t\tif ( ! warned ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\twarned = true;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTextureCube = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t// TODO: unify these code paths\n\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t} else {\n\n\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\t//\n\n\tthis.setFramebuffer = function ( value ) {\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = _framebuffer;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tvar width = texture.image.width;\n\t\tvar height = texture.image.height;\n\t\tvar glFormat = utils.convert( texture.format );\n\n\t\tthis.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( _gl.TEXTURE_2D, level || 0, glFormat, position.x, position.y, width, height, 0 );\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\tvar width = srcTexture.image.width;\n\t\tvar height = srcTexture.image.height;\n\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\tthis.setTexture2D( dstTexture, 0 );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nFogExp2.prototype.clone = function () {\n\n\treturn new FogExp2( this.color, this.density );\n\n};\n\nFogExp2.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'FogExp2',\n\t\tcolor: this.color.getHex(),\n\t\tdensity: this.density\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nFog.prototype.isFog = true;\n\nFog.prototype.clone = function () {\n\n\treturn new Fog( this.color, this.near, this.far );\n\n};\n\nFog.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'Fog',\n\t\tcolor: this.color.getHex(),\n\t\tnear: this.near,\n\t\tfar: this.far\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *\tuvOffset: new THREE.Vector2(),\n *\tuvScale: new THREE.Vector2()\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.map = source.map;\n\n\tthis.rotation = source.rotation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\tthis.center = new Vector2( 0.5, 0.5 );\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: ( function () {\n\n\t\tvar intersectPoint = new Vector3();\n\t\tvar worldScale = new Vector3();\n\t\tvar mvPosition = new Vector3();\n\n\t\tvar alignedPosition = new Vector2();\n\t\tvar rotatedPosition = new Vector2();\n\t\tvar viewWorldMatrix = new Matrix4();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t\t\t// compute position in camera space\n\t\t\talignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t\t\t// to check if rotation is not zero\n\t\t\tif ( sin !== undefined ) {\n\n\t\t\t\trotatedPosition.x = ( cos * alignedPosition.x ) - ( sin * alignedPosition.y );\n\t\t\t\trotatedPosition.y = ( sin * alignedPosition.x ) + ( cos * alignedPosition.y );\n\n\t\t\t} else {\n\n\t\t\t\trotatedPosition.copy( alignedPosition );\n\n\t\t\t}\n\n\n\t\t\tvertexPosition.copy( mvPosition );\n\t\t\tvertexPosition.x += rotatedPosition.x;\n\t\t\tvertexPosition.y += rotatedPosition.y;\n\n\t\t\t// transform to world space\n\t\t\tvertexPosition.applyMatrix4( viewWorldMatrix );\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\tviewWorldMatrix.getInverse( this.modelViewMatrix ).premultiply( this.matrixWorld );\n\t\t\tmvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\t\tvar rotation = this.material.rotation;\n\t\t\tvar sin, cos;\n\t\t\tif ( rotation !== 0 ) {\n\n\t\t\t\tcos = Math.cos( rotation );\n\t\t\t\tsin = Math.sin( rotation );\n\n\t\t\t}\n\n\t\t\tvar center = this.center;\n\n\t\t\ttransformVertex( vA.set( - 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vB.set( 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vC.set( 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\n\t\t\t// check first triangle\n\t\t\tvar intersect = raycaster.ray.intersectTriangle( vA, vB, vC, false, intersectPoint );\n\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex( vB.set( - 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\t\tintersect = raycaster.ray.intersectTriangle( vA, vC, vB, false, intersectPoint );\n\t\t\t\tif ( intersect === null ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\treturn this;\n\n\t}\n\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn levels[ i - 1 ].object;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t};\n\n\t}() ),\n\n\tupdate: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar offsetMatrix = new Matrix4();\n\t\tvar identityMatrix = new Matrix4();\n\n\t\treturn function update() {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t};\n\n\t} )(),\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n\tvar bones = this.initBones();\n\tvar skeleton = new Skeleton( bones );\n\n\tthis.bind( skeleton, this.matrixWorld );\n\n\tthis.normalizeSkinWeights();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tinitBones: function () {\n\n\t\tvar bones = [], bone, gbone;\n\t\tvar i, il;\n\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\t// first, create array of 'Bone' objects from geometry data\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t// create new 'Bone' object\n\n\t\t\t\tbone = new Bone();\n\t\t\t\tbones.push( bone );\n\n\t\t\t\t// apply values\n\n\t\t\t\tbone.name = gbone.name;\n\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t}\n\n\t\t\t// second, create bone hierarchy\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\n\n\t\t\t\t\t// subsequent bones in the hierarchy\n\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\n\n\t\t\t\t\tthis.add( bones[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// now the bones are part of the scene graph and children of the skinned mesh.\n\t\t// let's update the corresponding matrices\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn bones;\n\n\t},\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar scale, i;\n\n\t\tif ( this.geometry && this.geometry.isGeometry ) {\n\n\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\tscale = 1.0 / sw.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\n\n\t\t\tvar vec = new Vector4();\n\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\tscale = 1.0 / vec.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\n\t\treturn new LineSegments( geometry, material );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\t\t\tvar precisionSq = precision * precision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t\tstart.copy( vertices[ i ] );\n\t\t\t\t\tend.copy( vertices[ i + 1 ] );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() )\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar object = this;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar position = new Vector3();\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\tray.closestPointToPoint( point, intersectPoint );\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.generateMipmaps = false;\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tvar video = this.image;\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\tif ( func.length < 3 ) {\n\n\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t}\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tfunc( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tappplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction appplyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t1, 3, 4,\t1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t];\n\n\tvar indices = [\n\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t, 0, - r, t,\n\t\t 0, r, - t, 0, r, t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t, 0, - r, t, 0,\n\t\t r, - t, 0, r, t, 0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t, 0, - r, t, 0, - r,\n\t\t- t, 0, r, t, 0, r\n\t];\n\n\tvar indices = [\n\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\tvar P = new Vector3();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin = Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * Port from https://github.com/mapbox/earcut (v2.1.2)\n */\n\nvar Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\ttriangles = [];\n\n\t\tif ( ! outerNode ) return triangles;\n\n\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\n\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tvar i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\n\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tvar p = start, again;\n\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\n\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tvar stop = ear, prev, next;\n\n\t// iterate through ears, slicing them one by one\n\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertice leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\n\nfunction isEar( ear ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tvar p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\n\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\n\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t// first look for points inside the triangle in increasing z-order\n\n\tvar p = ear.nextZ;\n\n\twhile ( p && p.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.nextZ;\n\n\t}\n\n\t// then look for points in decreasing z-order\n\n\tp = ear.prevZ;\n\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\n\t\tp = p.prevZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\n\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tvar a = p.prev, b = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn p;\n\n}\n\n// try splitting polygon into two and triangulate them independently\n\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\n\tvar a = start;\n\n\tdo {\n\n\t\tvar b = a.next.next;\n\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\n\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\n\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tvar queue = [], i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\n\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\n\tif ( outerNode ) {\n\n\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\nfunction findHoleBridge( hole, outerNode ) {\n\n\tvar p = outerNode,\n\t\thx = hole.x,\n\t\thy = hole.y,\n\t\tqx = - Infinity,\n\t\tm;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tvar stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y,\n\t\ttanMin = Infinity,\n\t\ttan;\n\n\tp = m.next;\n\n\twhile ( p !== stop ) {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn m;\n\n}\n\n// interlink polygon nodes in z-order\n\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\nfunction sortLinked( list ) {\n\n\tvar i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\n\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\n\nfunction getLeftmost( start ) {\n\n\tvar p = start, leftmost = start;\n\n\tdo {\n\n\t\tif ( p.x < leftmost.x ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\n\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\tlocallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n}\n\n// signed area of a triangle\n\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\n\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\n\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tif ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\n\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\n\n\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\n\t\t\t\t area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\n\nfunction intersectsPolygon( a, b ) {\n\n\tvar p = a;\n\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\t\tintersects( p, p.next, a, b ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\n\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\n\nfunction middleInside( a, b ) {\n\n\tvar p = a,\n\t\tinside = false,\n\t\tpx = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\n\n\t\t\tinside = ! inside;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\nfunction splitPolygon( a, b ) {\n\n\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\n\nfunction insertNode( i, x, y, last ) {\n\n\tvar p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertice index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertice nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tvar sum = 0;\n\n\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tvar holeIndices = []; // array of hole indices\n\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tvar holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n};\n\nfunction removeDupEndPts( points ) {\n\n\tvar l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\nExtrudeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tvar scope = this;\n\n\tvar verticesArray = [];\n\tvar uvArray = [];\n\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\tvar shape = shapes[ i ];\n\t\taddShape( shape );\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\tthis.computeVertexNormals();\n\n\t// functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar placeholder = [];\n\n\t\t// options\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar extrudePath = options.extrudePath;\n\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t// deprecated options\n\n\t\tif ( options.amount !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\tdepth = options.amount;\n\n\t\t}\n\n\t\t//\n\n\t\tvar extrudePts, extrudeByPath = false;\n\t\tvar splineTube, binormal, normal, position2;\n\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t}\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n//\n\nvar WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\nfunction toJSON( shapes, options, data ) {\n\n\t//\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\t//\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float> // how far from text outline is bevel\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry( text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = thetaStart + thetaLength;\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0.5;\n\touterRadius = outerRadius || 1;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author astrodud / http://astrodud.isgreat.org/\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\nShapeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t// also check if holes are in the opposite direction\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\nShapeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n//\n\nfunction toJSON$1( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\theight = height || 1;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nShadowMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearCoat = 0.0;\n\tthis.clearCoatRoughness = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearCoat = source.clearCoat;\n\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMeshPhongMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.gradientMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\tthis.gradientMap = source.gradientMap;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = /*#__PURE__*/Object.freeze({\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false;\n\tvar itemsLoaded = 0;\n\tvar itemsTotal = 0;\n\tvar urlModifier = undefined;\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\t\treturn this;\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar loading = {};\n\nfunction FileLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FileLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = window.decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = window.atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = this.response;\n\n\t\t\t\tCache.add( url, response );\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( CompressedTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( DataTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t}\n\n\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction ImageLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( ImageLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction CubeTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( CubeTextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction TextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( TextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'EllipseCurve';\n\n\tthis.aX = aX || 0;\n\tthis.aY = aY || 0;\n\n\tthis.xRadius = xRadius || 1;\n\tthis.yRadius = yRadius || 1;\n\n\tthis.aStartAngle = aStartAngle || 0;\n\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\tthis.aClockwise = aClockwise || false;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn point.set( x, y );\n\n};\n\nEllipseCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.aX = source.aX;\n\tthis.aY = source.aY;\n\n\tthis.xRadius = source.xRadius;\n\tthis.yRadius = source.yRadius;\n\n\tthis.aStartAngle = source.aStartAngle;\n\tthis.aEndAngle = source.aEndAngle;\n\n\tthis.aClockwise = source.aClockwise;\n\n\tthis.aRotation = source.aRotation;\n\n\treturn this;\n\n};\n\n\nEllipseCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.aX = this.aX;\n\tdata.aY = this.aY;\n\n\tdata.xRadius = this.xRadius;\n\tdata.yRadius = this.yRadius;\n\n\tdata.aStartAngle = this.aStartAngle;\n\tdata.aEndAngle = this.aEndAngle;\n\n\tdata.aClockwise = this.aClockwise;\n\n\tdata.aRotation = this.aRotation;\n\n\treturn data;\n\n};\n\nEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.aX = json.aX;\n\tthis.aY = json.aY;\n\n\tthis.xRadius = json.xRadius;\n\tthis.yRadius = json.yRadius;\n\n\tthis.aStartAngle = json.aStartAngle;\n\tthis.aEndAngle = json.aEndAngle;\n\n\tthis.aClockwise = json.aClockwise;\n\n\tthis.aRotation = json.aRotation;\n\n\treturn this;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\tthis.type = 'ArcCurve';\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CatmullRomCurve3';\n\n\tthis.points = points || [];\n\tthis.closed = closed || false;\n\tthis.curveType = curveType || 'centripetal';\n\tthis.tension = tension || 0.5;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t}\n\n\tpoint.set(\n\t\tpx.calc( weight ),\n\t\tpy.calc( weight ),\n\t\tpz.calc( weight )\n\t);\n\n\treturn point;\n\n};\n\nCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\tthis.closed = source.closed;\n\tthis.curveType = source.curveType;\n\tthis.tension = source.tension;\n\n\treturn this;\n\n};\n\nCatmullRomCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\tdata.closed = this.closed;\n\tdata.curveType = this.curveType;\n\tdata.tension = this.tension;\n\n\treturn data;\n\n};\n\nCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t}\n\n\tthis.closed = json.closed;\n\tthis.curveType = json.curveType;\n\tthis.tension = json.tension;\n\n\treturn this;\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\tthis.v3 = v3 || new Vector2();\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\tthis.v3 = v3 || new Vector3();\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve3';\n\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'SplineCurve';\n\n\tthis.points = points || [];\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar points = this.points;\n\tvar p = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar p1 = points[ intPoint ];\n\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tpoint.set(\n\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t);\n\n\treturn point;\n\n};\n\nSplineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\treturn this;\n\n};\n\nSplineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\treturn data;\n\n};\n\nSplineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t}\n\n\treturn this;\n\n};\n\n\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.type = 'CurvePath';\n\n\tthis.curves = [];\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\n\tthis.type = 'Path';\n\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.setFromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tconstructor: Path,\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape( points ) {\n\n\tPath.call( this, points );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.type = 'Shape';\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tPath.prototype.copy.call( this, source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.matrix = new Matrix4();\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdate: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow( ) {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrack.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\tthis.validate();\n\tthis.optimize();\n\n}\n\n// Static methods:\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tparse: function ( json ) {\n\n\t\tif ( json.type === undefined ) {\n\n\t\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t\t}\n\n\t\tvar trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );\n\n\t\tif ( json.times === undefined ) {\n\n\t\t\tvar times = [], values = [];\n\n\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\n\t\t}\n\n\t\t// derived classes can define a static parse method\n\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\treturn trackType.parse( json );\n\n\t\t} else {\n\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t},\n\n\t_getTrackTypeForValueTypeName: function ( typeName ) {\n\n\t\tswitch ( typeName.toLowerCase() ) {\n\n\t\t\tcase 'scalar':\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase 'vector':\n\t\t\tcase 'vector2':\n\t\t\tcase 'vector3':\n\t\t\tcase 'vector4':\n\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase 'color':\n\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase 'quaternion':\n\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase 'bool':\n\t\t\tcase 'boolean':\n\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase 'string':\n\n\t\t\t\treturn StringKeyframeTrack;\n\n\t\t}\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n\t}\n\n} );\n\nObject.assign( KeyframeTrack.prototype, {\n\n\tconstructor: KeyframeTrack,\n\n\tTimeBufferType: Float32Array,\n\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n\tthis.optimize();\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.textures = {};\n\n}\n\nObject.assign( MaterialLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\treturn material;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( BufferGeometryLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {}\n\nLoader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tvar handlers = this.handlers;\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\nObject.assign( Loader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tonLoadStart: function () {},\n\n\tonLoadProgress: function () {},\n\n\tonLoadComplete: function () {},\n\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tcreateMaterial: ( function () {\n\n\t\tvar BlendingMode = {\n\t\t\tNoBlending: NoBlending,\n\t\t\tNormalBlending: NormalBlending,\n\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\tCustomBlending: CustomBlending\n\t\t};\n\n\t\tvar color = new Color();\n\t\tvar textureLoader = new TextureLoader();\n\t\tvar materialLoader = new MaterialLoader();\n\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t// convert from old material format\n\n\t\t\tvar textures = {};\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar json = {\n\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t};\n\n\t\t\tfor ( var name in m ) {\n\n\t\t\t\tvar value = m[ name ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\tjson.normalScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\treturn materialLoader.parse( json );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nvar LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tvar s = '';\n\n\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\t// Merges multi-byte utf-8 characters.\n\t\treturn decodeURIComponent( escape( s ) );\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction JSONLoader( manager ) {\n\n\tif ( typeof manager === 'boolean' ) {\n\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\tmanager = undefined;\n\n\t}\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\tthis.withCredentials = false;\n\n}\n\nObject.assign( JSONLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === 'string' ) ? this.texturePath : LoaderUtils.extractUrlBase( url );\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = JSON.parse( text );\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\tvar type = metadata.type;\n\n\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\t\treturn this;\n\n\t},\n\n\tparse: ( function () {\n\n\t\tfunction parseModel( json, geometry ) {\n\n\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t}\n\n\t\t\tvar i, j, fi,\n\n\t\t\t\toffset, zLength,\n\n\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\ttype,\n\t\t\t\tisQuad,\n\t\t\t\thasMaterial,\n\t\t\t\thasFaceVertexUv,\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\tfaces = json.faces,\n\t\t\t\tvertices = json.vertices,\n\t\t\t\tnormals = json.normals,\n\t\t\t\tcolors = json.colors,\n\n\t\t\t\tscale = json.scale,\n\n\t\t\t\tnUvLayers = 0;\n\n\n\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t// disregard empty arrays\n\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = vertices.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\tvertex = new Vector3();\n\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = faces.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\ttype = faces[ offset ++ ];\n\n\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\toffset += 4;\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface = new Face3();\n\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseSkin( json, geometry ) {\n\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.bones = json.bones;\n\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseMorphing( json, geometry ) {\n\n\t\t\tvar scale = json.scale;\n\n\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAnimations( json, geometry ) {\n\n\t\t\tvar outputAnimations = [];\n\n\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\tvar animations = [];\n\n\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\tanimations.push( json.animation );\n\n\t\t\t}\n\n\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t}\n\n\t\t\t// parse implicit morph animations\n\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t}\n\n\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t}\n\n\t\treturn function parse( json, texturePath ) {\n\n\t\t\tif ( json.data !== undefined ) {\n\n\t\t\t\t// Geometry 4.0 spec\n\t\t\t\tjson = json.data;\n\n\t\t\t}\n\n\t\t\tif ( json.scale !== undefined ) {\n\n\t\t\t\tjson.scale = 1.0 / json.scale;\n\n\t\t\t} else {\n\n\t\t\t\tjson.scale = 1.0;\n\n\t\t\t}\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tparseModel( json, geometry );\n\t\t\tparseSkin( json, geometry );\n\t\t\tparseMorphing( json, geometry );\n\t\t\tparseAnimations( json, geometry );\n\n\t\t\tgeometry.computeFaceNormals();\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\treturn { geometry: geometry };\n\n\t\t\t} else {\n\n\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.texturePath = '';\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.texturePath === '' ) {\n\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t}\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\t\treturn this;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar shapes = this.parseShape( json.shapes );\n\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseShape: function ( json ) {\n\n\t\tvar shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t},\n\n\tparseGeometries: function ( json, shapes ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.texturePath ).geometry;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tarray.push( loader.parse( data.materials[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar data = json[ i ];\n\n\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.texturePath + currentUrl;\n\n\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function ( data, geometries, materials ) {\n\n\t\tvar object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tvar children = data.children;\n\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tvar levels = data.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tvar level = levels[ l ];\n\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n\n/**\n * @author thespite / http://clicktorelease.com/\n */\n\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\tthis.options = undefined;\n\n}\n\nImageBitmapLoader.prototype = {\n\n\tconstructor: ImageBitmapLoader,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tfetch( url ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t} );\n\n\t},\n\n\tsetCrossOrigin: function ( /* value */ ) {\n\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.type = 'ShapePath';\n\n\tthis.color = new Color();\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction Font( data ) {\n\n\tthis.type = 'Font';\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size ) {\n\n\t\tif ( size === undefined ) size = 100;\n\n\t\tvar shapes = [];\n\t\tvar paths = createPaths( text, size, this.data );\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\nfunction createPaths( text, size, data ) {\n\n\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\n\tvar scale = size / data.resolution;\n\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tvar paths = [];\n\n\tvar offsetX = 0, offsetY = 0;\n\n\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\tvar char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) return;\n\n\tvar path = new ShapePath();\n\n\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\tvar action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FontLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\tcontext = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AudioLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\tvar context = AudioContext.getContext();\n\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: ( function () {\n\n\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\tvar eyeRight = new Matrix4();\n\t\tvar eyeLeft = new Matrix4();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tinstance = this;\n\t\t\t\tfocus = camera.focus;\n\t\t\t\tfov = camera.fov;\n\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\tnear = camera.near;\n\t\t\t\tfar = camera.far;\n\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CubeCamera( near, far, cubeResolution ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar fov = 90, aspect = 1;\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderTarget.activeCubeFace = 0;\n\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 1;\n\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 2;\n\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 3;\n\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 4;\n\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderTarget.activeCubeFace = 5;\n\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderTarget.activeCubeFace = i;\n\t\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\tlistener.positionX.setValueAtTime( position.x, this.context.currentTime );\n\t\t\t\tlistener.positionY.setValueAtTime( position.y, this.context.currentTime );\n\t\t\t\tlistener.positionZ.setValueAtTime( position.z, this.context.currentTime );\n\t\t\t\tlistener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );\n\t\t\t\tlistener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );\n\t\t\t\tlistener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );\n\t\t\t\tlistener.upX.setValueAtTime( up.x, this.context.currentTime );\n\t\t\t\tlistener.upY.setValueAtTime( up.y, this.context.currentTime );\n\t\t\t\tlistener.upZ.setValueAtTime( up.z, this.context.currentTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.loop = false;\n\tthis.startTime = 0;\n\tthis.offset = 0;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function () {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar source = this.context.createBufferSource();\n\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\n\t\tthis.startTime = this.context.currentTime;\n\t\tsource.start( this.startTime, this.offset );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.offset = 0;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar panner = this.panner;\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\tpanner.setPosition( position.x, position.y, position.z );\n\t\t\tpanner.setOrientation( orientation.x, orientation.y, orientation.z );\n\n\t\t};\n\n\t} )()\n\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\n// Characters [].:/ are reserved for track binding syntax.\nvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param  {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: ( function () {\n\n\t\tvar reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\n\n\t\treturn function sanitizeNodeName( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( reservedRe, '' );\n\n\t\t};\n\n\t}() ),\n\n\tparseTrackName: function () {\n\n\t\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t\t// instead, we exclude reserved characters and match everything else.\n\t\tvar wordChar = '[^' + RESERVED_CHARS_RE + ']';\n\t\tvar wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t// be matched to parse the rest of the track name.\n\t\tvar directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', wordChar );\n\n\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\tvar nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\n\n\t\t// Object on target node, and accessor. May not contain reserved\n\t\t// characters. Accessor may contain any character except closing bracket.\n\t\tvar objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', wordChar );\n\n\t\t// Property and accessor. May not contain reserved characters. Accessor may\n\t\t// contain any non-bracket characters.\n\t\tvar propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', wordChar );\n\n\t\tvar trackRe = new RegExp( ''\n\t\t\t+ '^'\n\t\t\t+ directoryRe\n\t\t\t+ nodeRe\n\t\t\t+ objectRe\n\t\t\t+ propertyRe\n\t\t\t+ '$'\n\t\t);\n\n\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\treturn function parseTrackName( trackName ) {\n\n\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t};\n\n\t}(),\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n * \t-\tAdd objects you would otherwise pass as 'root' to the\n * \t\tconstructor or the .clipAction method of AnimationMixer.\n *\n * \t-\tInstead pass this object as 'root'.\n *\n * \t-\tYou can also add and remove objects later when the mixer\n * \t\tis running.\n *\n * Note:\n *\n *  \tObjects of this class appear as one object to the mixer,\n *  \tso cache control of the individual objects must be done\n *  \ton the group.\n *\n * Limitation:\n *\n * \t- \tThe animated properties must be compatible among the\n * \t\tall objects in the group.\n *\n *  -\tA single property can either be controlled through a\n *  \ttarget group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup() {\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = [];\t\t\t\t\t// inside: string\n\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() {\n\n\t\t\t\treturn scope._objects.length;\n\n\t\t\t},\n\t\t\tget inUse() {\n\n\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t}\n\t\t},\n\t\tget bindingsPerObject() {\n\n\t\t\treturn scope._bindings.length;\n\n\t\t}\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length,\n\t\t\tknownObject = undefined;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = - 1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\n\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\n\n\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function () {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function () {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0;\t\t\t// restart clip\n\t\tthis._loopCount = - 1;\t// forget previous loops\n\t\tthis._startTime = null;\t// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function () {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function () {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function ( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function ( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function ( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function () {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function () {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function () {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function ( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function ( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function ( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function () {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function () {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function () {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function () {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function ( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function ( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function ( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\n\t\tif ( deltaTime === 0 ) return time;\n\n\t\tvar duration = this._clip.duration,\n\n\t\t\tloop = this.loop,\n\t\t\tloopCount = this._loopCount;\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else break handle_stop;\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\tthis.time = time;\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.time = time;\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: AnimationMixer,\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tremove_empty_map: {\n\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n\tthis.normalized = normalized === true;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\n\n\tBufferAttribute.call( this, array, itemSize );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The poles (phi) are at the positive and negative y axis.\n * The equator starts at positive z.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function () {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( vec3 ) {\n\n\t\tthis.radius = vec3.length();\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\tthis.phi = Math.acos( _Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( vec3 ) {\n\n\t\tthis.radius = Math.sqrt( vec3.x * vec3.x + vec3.z * vec3.z );\n\t\tthis.theta = Math.atan2( vec3.x, vec3.z );\n\t\tthis.y = vec3.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction SpotLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0, \t0, 0, 1,\n\t\t0, 0, 0, \t1, 0, 1,\n\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t0, 0, 0, \t0, 1, 1,\n\t\t0, 0, 0, \t0, - 1, 1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\tvar vector2 = new Vector3();\n\n\treturn function update() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n}();\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function () {\n\n\tvar vector = new Vector3();\n\n\tvar boneMatrix = new Matrix4();\n\tvar matrixWorldInv = new Matrix4();\n\n\treturn function updateMatrixWorld( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize, color ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.color = color;\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t}\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction RectAreaLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\n\n\tthis.line = new Line( geometry, material );\n\tthis.add( this.line );\n\n\n\tthis.update();\n\n}\n\nRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nRectAreaLightHelper.prototype.update = function () {\n\n\t// calculate new dimensions of the helper\n\n\tvar hx = this.light.width * 0.5;\n\tvar hy = this.light.height * 0.5;\n\n\tvar position = this.line.geometry.attributes.position;\n\tvar array = position.array;\n\n\t// update vertices\n\n\tarray[ 0 ] = hx; array[ 1 ] = - hy; array[ 2 ] = 0;\n\tarray[ 3 ] = hx; array[ 4 ] = hy; array[ 5 ] = 0;\n\tarray[ 6 ] = - hx; array[ 7 ] = hy; array[ 8 ] = 0;\n\tarray[ 9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\n\tarray[ 12 ] = hx; array[ 13 ] = - hy; array[ 14 ] = 0;\n\n\tposition.needsUpdate = true;\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.line.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.line.material.color.copy( this.light.color );\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\tvar color1 = new Color();\n\tvar color2 = new Color();\n\n\treturn function update() {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\tcolor1.copy( this.light.color );\n\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.create( LineSegments.prototype );\nGridHelper.prototype.constructor = GridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n}\n\nFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size, size, 0,\n\t\tsize, size, 0,\n\t\tsize, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size, size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar v3 = new Vector3();\n\n\treturn function update() {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tthis.lightPlane.lookAt( v3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( v3 );\n\t\tthis.targetLine.scale.z = v3.length();\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( 'n1', 'n2', colorFrustum );\n\taddLine( 'n2', 'n4', colorFrustum );\n\taddLine( 'n4', 'n3', colorFrustum );\n\taddLine( 'n3', 'n1', colorFrustum );\n\n\t// far\n\n\taddLine( 'f1', 'f2', colorFrustum );\n\taddLine( 'f2', 'f4', colorFrustum );\n\taddLine( 'f4', 'f3', colorFrustum );\n\taddLine( 'f3', 'f1', colorFrustum );\n\n\t// sides\n\n\taddLine( 'n1', 'f1', colorFrustum );\n\taddLine( 'n2', 'f2', colorFrustum );\n\taddLine( 'n3', 'f3', colorFrustum );\n\taddLine( 'n4', 'f4', colorFrustum );\n\n\t// cone\n\n\taddLine( 'p', 'n1', colorCone );\n\taddLine( 'p', 'n2', colorCone );\n\taddLine( 'p', 'n3', colorCone );\n\taddLine( 'p', 'n4', colorCone );\n\n\t// up\n\n\taddLine( 'u1', 'u2', colorUp );\n\taddLine( 'u2', 'u3', colorUp );\n\taddLine( 'u3', 'u1', colorUp );\n\n\t// target\n\n\taddLine( 'c', 't', colorTarget );\n\taddLine( 'p', 'c', colorCross );\n\n\t// cross\n\n\taddLine( 'cn1', 'cn2', colorCross );\n\taddLine( 'cn3', 'cn4', colorCross );\n\n\taddLine( 'cf1', 'cf2', colorCross );\n\taddLine( 'cf3', 'cf4', colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\n\tvar vector = new Vector3();\n\tvar camera = new Camera();\n\n\tfunction setPoint( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn function update() {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', 0, 0, - 1 );\n\t\tsetPoint( 't', 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', - w, - h, - 1 );\n\t\tsetPoint( 'n2', w, - h, - 1 );\n\t\tsetPoint( 'n3', - w, h, - 1 );\n\t\tsetPoint( 'n4', w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', - w, - h, 1 );\n\t\tsetPoint( 'f2', w, - h, 1 );\n\t\tsetPoint( 'f3', - w, h, 1 );\n\t\tsetPoint( 'f4', w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', - w, 0, 1 );\n\t\tsetPoint( 'cf2', w, 0, 1 );\n\t\tsetPoint( 'cf3', 0, - h, 1 );\n\t\tsetPoint( 'cf4', 0, h, 1 );\n\n\t\tsetPoint( 'cn1', - w, 0, - 1 );\n\t\tsetPoint( 'cn2', w, 0, - 1 );\n\t\tsetPoint( 'cn3', 0, - h, - 1 );\n\t\tsetPoint( 'cn4', 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = ( function () {\n\n\tvar box = new Box3();\n\n\treturn function update( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tbox.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tvar min = box.min;\n\t\tvar max = box.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t};\n\n} )();\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3Helper( box, hex ) {\n\n\tthis.type = 'Box3Helper';\n\n\tthis.box = box;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.geometry.computeBoundingSphere();\n\n}\n\nBox3Helper.prototype = Object.create( LineSegments.prototype );\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar box = this.box;\n\n\tif ( box.isEmpty() ) return;\n\n\tbox.getCenter( this.position );\n\n\tbox.getSize( this.scale );\n\n\tthis.scale.multiplyScalar( 0.5 );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\tthis.lookAt( this.plane.normal );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar lineGeometry, coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( length === undefined ) length = 1;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( lineGeometry === undefined ) {\n\n\t\tlineGeometry = new BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new Vector3();\n\tvar radians;\n\n\treturn function setDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.copy( color );\n\tthis.cone.material.color.copy( color );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxesHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,\tsize, 0, 0,\n\t\t0, 0, 0,\t0, size, 0,\n\t\t0, 0, 0,\t0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t0, 0, 1,\t0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxesHelper.prototype = Object.create( LineSegments.prototype );\nAxesHelper.prototype.constructor = AxesHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nvar LineStrip = 0;\n\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials ) {\n\n\tif ( materials === undefined ) materials = [];\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nObject.assign( CurvePath.prototype, {\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from equidistant sampling along the path\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n//\n\nObject.assign( Path.prototype, {\n\n\tfromPoints: function ( points ) {\n\n\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\tthis.setFromPoints( points );\n\n\t}\n\n} );\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nObject.assign( Loader.prototype, {\n\n\textractUrlBase: function ( url ) {\n\n\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t}\n\n} );\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nObject.assign( _Math, {\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\treturn _Math.floorPowerOfTwo( value );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t}\n\n} );\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tvar v1;\n\n\t\treturn function getPosition() {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t};\n\n\t}(),\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tarea: function () {\n\n\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\treturn this.getArea();\n\n\t},\n\tbarycoordFromPoint: function ( point, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn this.getBarycoord( point, target );\n\n\t},\n\tmidpoint: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\treturn this.getMidpoint( target );\n\n\t},\n\tnormal: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn this.getNormal( target );\n\n\t},\n\tplane: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\treturn this.getPlane( target );\n\n\t}\n\n} );\n\nObject.assign( Triangle, {\n\n\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t},\n\tnormal: function ( a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textractAllPoints: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\treturn this.extractPoints( divisions );\n\n\t},\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\n//\n\nObject.assign( Geometry.prototype, {\n\n\tcomputeTangents: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeLineDistances: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t}\n\n} );\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t},\n\tgetWorldRotation: function () {\n\n\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\tgetArrays: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t},\n\n\taddShapeList: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t},\n\n\taddShape: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tanimate: function ( callback ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\tthis.setAnimationLoop( callback );\n\n\t},\n\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\n\tresetGLState: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\treturn this.state.reset();\n\n\t},\n\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t},\n\tsetFaceCulling: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebVRManager.prototype, {\n\n\tstanding: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tvar scope = this;\n\tvar audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\n//\n\nvar GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tvar matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nvar ImageUtils = {\n\n\tcrossOrigin: undefined,\n\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\tvar loader = new TextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t},\n\n\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\tvar loader = new CubeTextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t},\n\n\tloadCompressedTexture: function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t},\n\n\tloadCompressedTextureCube: function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t}\n\n};\n\n//\n\nfunction Projector() {\n\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function () {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n}\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\tthis.clear = function () {};\n\tthis.render = function () {};\n\tthis.setClearColor = function () {};\n\tthis.setSize = function () {};\n\n}\n\n//\n\nvar SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\n\n}\n\nexport { WebGLRenderTargetCube, WebGLRenderTarget, WebGLRenderer, ShaderLib, UniformsLib, UniformsUtils, ShaderChunk, FogExp2, Fog, Scene, Sprite, LOD, SkinnedMesh, Skeleton, Bone, Mesh, LineSegments, LineLoop, Line, Points, Group, VideoTexture, DataTexture, CompressedTexture, CubeTexture, CanvasTexture, DepthTexture, Texture, CompressedTextureLoader, DataTextureLoader, CubeTextureLoader, TextureLoader, ObjectLoader, MaterialLoader, BufferGeometryLoader, DefaultLoadingManager, LoadingManager, JSONLoader, ImageLoader, ImageBitmapLoader, FontLoader, FileLoader, Loader, LoaderUtils, Cache, AudioLoader, SpotLightShadow, SpotLight, PointLight, RectAreaLight, HemisphereLight, DirectionalLightShadow, DirectionalLight, AmbientLight, LightShadow, Light, StereoCamera, PerspectiveCamera, OrthographicCamera, CubeCamera, ArrayCamera, Camera, AudioListener, PositionalAudio, AudioContext, AudioAnalyser, Audio, VectorKeyframeTrack, StringKeyframeTrack, QuaternionKeyframeTrack, NumberKeyframeTrack, ColorKeyframeTrack, BooleanKeyframeTrack, PropertyMixer, PropertyBinding, KeyframeTrack, AnimationUtils, AnimationObjectGroup, AnimationMixer, AnimationClip, Uniform, InstancedBufferGeometry, BufferGeometry, Geometry, InterleavedBufferAttribute, InstancedInterleavedBuffer, InterleavedBuffer, InstancedBufferAttribute, Face3, Object3D, Raycaster, Layers, EventDispatcher, Clock, QuaternionLinearInterpolant, LinearInterpolant, DiscreteInterpolant, CubicInterpolant, Interpolant, Triangle, _Math as Math, Spherical, Cylindrical, Plane, Frustum, Sphere, Ray, Matrix4, Matrix3, Box3, Box2, Line3, Euler, Vector4, Vector3, Vector2, Quaternion, Color, ImmediateRenderObject, VertexNormalsHelper, SpotLightHelper, SkeletonHelper, PointLightHelper, RectAreaLightHelper, HemisphereLightHelper, GridHelper, PolarGridHelper, FaceNormalsHelper, DirectionalLightHelper, CameraHelper, BoxHelper, Box3Helper, PlaneHelper, ArrowHelper, AxesHelper, Shape, Path, ShapePath, Font, CurvePath, Curve, ShapeUtils, WebGLUtils, WireframeGeometry, ParametricGeometry, ParametricBufferGeometry, TetrahedronGeometry, TetrahedronBufferGeometry, OctahedronGeometry, OctahedronBufferGeometry, IcosahedronGeometry, IcosahedronBufferGeometry, DodecahedronGeometry, DodecahedronBufferGeometry, PolyhedronGeometry, PolyhedronBufferGeometry, TubeGeometry, TubeBufferGeometry, TorusKnotGeometry, TorusKnotBufferGeometry, TorusGeometry, TorusBufferGeometry, TextGeometry, TextBufferGeometry, SphereGeometry, SphereBufferGeometry, RingGeometry, RingBufferGeometry, PlaneGeometry, PlaneBufferGeometry, LatheGeometry, LatheBufferGeometry, ShapeGeometry, ShapeBufferGeometry, ExtrudeGeometry, ExtrudeBufferGeometry, EdgesGeometry, ConeGeometry, ConeBufferGeometry, CylinderGeometry, CylinderBufferGeometry, CircleGeometry, CircleBufferGeometry, BoxGeometry, BoxBufferGeometry, ShadowMaterial, SpriteMaterial, RawShaderMaterial, ShaderMaterial, PointsMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshPhongMaterial, MeshToonMaterial, MeshNormalMaterial, MeshLambertMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshBasicMaterial, LineDashedMaterial, LineBasicMaterial, Material, Float64BufferAttribute, Float32BufferAttribute, Uint32BufferAttribute, Int32BufferAttribute, Uint16BufferAttribute, Int16BufferAttribute, Uint8ClampedBufferAttribute, Uint8BufferAttribute, Int8BufferAttribute, BufferAttribute, ArcCurve, CatmullRomCurve3, CubicBezierCurve, CubicBezierCurve3, EllipseCurve, LineCurve, LineCurve3, QuadraticBezierCurve, QuadraticBezierCurve3, SplineCurve, REVISION, MOUSE, CullFaceNone, CullFaceBack, CullFaceFront, CullFaceFrontBack, FrontFaceDirectionCW, FrontFaceDirectionCCW, BasicShadowMap, PCFShadowMap, PCFSoftShadowMap, FrontSide, BackSide, DoubleSide, FlatShading, SmoothShading, NoColors, FaceColors, VertexColors, NoBlending, NormalBlending, AdditiveBlending, SubtractiveBlending, MultiplyBlending, CustomBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, OneMinusSrcColorFactor, SrcAlphaFactor, OneMinusSrcAlphaFactor, DstAlphaFactor, OneMinusDstAlphaFactor, DstColorFactor, OneMinusDstColorFactor, SrcAlphaSaturateFactor, NeverDepth, AlwaysDepth, LessDepth, LessEqualDepth, EqualDepth, GreaterEqualDepth, GreaterDepth, NotEqualDepth, MultiplyOperation, MixOperation, AddOperation, NoToneMapping, LinearToneMapping, ReinhardToneMapping, Uncharted2ToneMapping, CineonToneMapping, UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, SphericalReflectionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipMapNearestFilter, NearestMipMapLinearFilter, LinearFilter, LinearMipMapNearestFilter, LinearMipMapLinearFilter, UnsignedByteType, ByteType, ShortType, UnsignedShortType, IntType, UnsignedIntType, FloatType, HalfFloatType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedInt248Type, AlphaFormat, RGBFormat, RGBAFormat, LuminanceFormat, LuminanceAlphaFormat, RGBEFormat, DepthFormat, DepthStencilFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_ETC1_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, LoopOnce, LoopRepeat, LoopPingPong, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, ZeroCurvatureEnding, ZeroSlopeEnding, WrapAroundEnding, TrianglesDrawMode, TriangleStripDrawMode, TriangleFanDrawMode, LinearEncoding, sRGBEncoding, GammaEncoding, RGBEEncoding, LogLuvEncoding, RGBM7Encoding, RGBM16Encoding, RGBDEncoding, BasicDepthPacking, RGBADepthPacking, TangentSpaceNormalMap, ObjectSpaceNormalMap, BoxGeometry as CubeGeometry, Face4, LineStrip, LinePieces, MeshFaceMaterial, MultiMaterial, PointCloud, Particle, ParticleSystem, PointCloudMaterial, ParticleBasicMaterial, ParticleSystemMaterial, Vertex, DynamicBufferAttribute, Int8Attribute, Uint8Attribute, Uint8ClampedAttribute, Int16Attribute, Uint16Attribute, Int32Attribute, Uint32Attribute, Float32Attribute, Float64Attribute, ClosedSplineCurve3, SplineCurve3, Spline, AxisHelper, BoundingBoxHelper, EdgesHelper, WireframeHelper, XHRLoader, BinaryTextureLoader, GeometryUtils, ImageUtils, Projector, CanvasRenderer, SceneUtils, LensFlare };\n","import { isOrbiting, hexToRgb } from './_logic.js'\n\nvar THREE = require('three');\n\nexport function createCelestialObjectsFromArray(celestialObjectArray, scene) {\n  for (var i = 0; i < celestialObjectArray.length; i++) {\n    createCelestialObject(scene, celestialObjectArray[i]);\n  }\n}\n\nexport function createCelestialObject (scene, celestialObject) {\n  var geometry = new THREE.SphereGeometry(parseFloat(celestialObject.scale), 50, 50);\n  var material = new THREE.MeshBasicMaterial( {color: hexToRgb(celestialObject.color) } );\n  var object = new THREE.Mesh(geometry, material);\n\n  //Lighting\n  object.castShadow = true;\n  //Check if emissive\n  if (celestialObject.intensity !== \"\") {\n    object.receiveShadow = false;\n  } else {\n    // Not emmsive, get shadows\n    object.receiveShadow = true;\n  }\n\n  object.name = celestialObject.name;\n\n  if (isOrbiting(celestialObject)) {\n    //Not valid coordinates, don't do stuff, default to 0, 0, 0\n  } else {\n    var centerArray = (celestialObject.center).split(\" \", 3);\n    //Center is a valid coordinate, set coordinates\n    object.position.x = parseFloat(centerArray[0]);\n    object.position.y = parseFloat(centerArray[1]);\n    object.position.z = parseFloat(centerArray[2]);\n  }\n\n  //Add the celestialObject to the scene\n  scene.add(object);\n}\n","(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.newtonRaphson = factory();\n  }\n}(this, function () {\n  return function findRoot(f, fprime, guess, options) {\n    options = options || {};\n    var tolerance = options.tolerance || 0.00000001;\n    var epsilon = options.epsilon || 0.0000000000001;\n    var maxIterations = options.maxIterations || 20;\n    var haveWeFoundSolution = false; \n    var newtonX;\n   \n    for (var i = 0; i < maxIterations; ++i) {\n      var denominator = fprime(guess);\n      if (Math.abs(denominator) < epsilon) {\n        return false\n      }\n   \n      result = guess - (f(guess) / denominator);\n      \n      var resultWithinTolerance = Math.abs(result - guess) < tolerance;\n      if (resultWithinTolerance) { \n        return result\n      }\n\n      guess = result;\n    }\n    \n    return false;\n  }\n}));","import { isOrbiting, getParentBody, wrapNumber, checkDegToRad, hexToRgb } from './_logic.js'\n\nvar THREE = require('three');\nvar findRoot = require('newton-raphson');\n\nexport function drawOrbitsFromArray(celestialObjectArray, scene, deltaT = 0, animationSpeed) {\n  for (var i = 0; i < celestialObjectArray.length; i++) {\n    drawOrbit(scene, celestialObjectArray[i], celestialObjectArray, deltaT, animationSpeed);\n  }\n}\n\nexport function drawOrbit(scene, celestialObject, celestialObjectArray, deltaT = 0, animationSpeed) {\n  var meanAnomaly = getMeanAnomaly(celestialObject, deltaT, animationSpeed);\n  var eccentricAnomaly = getEccentricAnomaly(celestialObject, meanAnomaly);\n  var trueAnomaly = getTrueAnomaly(celestialObject, eccentricAnomaly);\n  var radius = getRadius(celestialObject, trueAnomaly);\n  var objectToDraw = scene.getObjectByName(celestialObject.name);\n\n  // console.log(trueAnomaly);\n  if (isOrbiting(celestialObject)) {\n    //Fetch parent body center and use that as its center\n    var parentBody = scene.getObjectByName(celestialObject.center);\n    var inclination = checkDegToRad(celestialObject.inclination) + checkDegToRad(getParentBody(celestialObject, celestialObjectArray).inclination);\n    var coordinates = orbitCoordinates(celestialObject, trueAnomaly, radius, inclination);\n    objectToDraw.position.x = parentBody.position.x + coordinates.x;\n    objectToDraw.position.y = parentBody.position.y + coordinates.y;\n    objectToDraw.position.z = parentBody.position.z + coordinates.z;\n  } else {\n    // Draw orbit directly using orbit parameters\n    var inclination = checkDegToRad(celestialObject.inclination);\n    var coordinates = orbitCoordinates(celestialObject, trueAnomaly, radius, inclination);\n    objectToDraw.position.x = coordinates.x;\n    objectToDraw.position.y = coordinates.y;\n    objectToDraw.position.z = coordinates.z;\n  }\n}\n\n//Time to get mathy\n\nfunction getMeanAnomaly(celestialObject, deltaT, animationSpeed) {\n  var meanAnomaly = checkDegToRad(celestialObject.mean_anomaly);\n  var newMeanAnomaly = meanAnomaly + ((2 * Math.PI)/(celestialObject.period * (1/animationSpeed) )) * deltaT;\n  return wrapNumber(newMeanAnomaly, 2 * Math.PI);\n}\n\nfunction getEccentricAnomaly(celestialObject, meanAnomaly) {\n  var eccentricity = parseFloat(celestialObject.eccentricity);\n  // Function and first and second derivatives to use the Newton-Raphson method to approximate a root\n  function f(x){return x - eccentricity * Math.sin(x) - meanAnomaly;}\n  function fp(x) {return 1 - eccentricity * Math.cos(x);}\n\n  return wrapNumber(findRoot(f, fp, Math.PI), 2 * Math.PI);\n}\n\nfunction getTrueAnomaly(celestialObject, eccentricAnomaly) {\n  var eccentricity = parseFloat(celestialObject.eccentricity);\n  var trueAnomaly = 2 * Math.atan( Math.pow((1 + eccentricity)/(1 - eccentricity), 0.5 ) * Math.tan(eccentricAnomaly/2) );\n  if (trueAnomaly < 0) {\n    trueAnomaly = trueAnomaly + 2 * Math.PI;\n    return trueAnomaly;\n  } else {\n    return trueAnomaly;\n  }\n}\n\nfunction getRadius(celestialObject, trueAnomaly) {\n  var semimajor_axis = parseFloat(celestialObject.semimajor_axis);\n  var eccentricity = parseFloat(celestialObject.eccentricity);\n  return ( semimajor_axis * (1 - Math.pow(eccentricity, 2)) )/( 1 + eccentricity * Math.cos(trueAnomaly) );\n}\n\nfunction orbitCoordinates(celestialObject, trueAnomaly, radius, inclination) {\n  var true_anomaly = trueAnomaly;\n  var longitude = checkDegToRad(celestialObject.longitude);\n  var periapsis_arg = checkDegToRad(celestialObject.periapsis_arg);\n\n  var x = radius * ( Math.cos(longitude) * Math.cos(periapsis_arg + true_anomaly) - Math.sin(longitude) * Math.sin(periapsis_arg + true_anomaly) * Math.cos(inclination) );\n  var y = radius * ( Math.sin(longitude) * Math.cos(periapsis_arg + true_anomaly) + Math.cos(longitude) * Math.sin(periapsis_arg + true_anomaly) * Math.cos(inclination) );\n  var z = radius * ( Math.sin(inclination) * Math.sin(periapsis_arg + true_anomaly) );\n\n  return {\n    x: x,\n    y: y,\n    z: z\n  }\n}\n","import { hexToRgb } from './_logic.js'\n\nvar THREE = require('three');\n\nexport function createSky(scene, file) {\n  var geometry = new THREE.SphereGeometry(5000, 64, 32);\n  var texture = new THREE.TextureLoader().load(file);\n  var material = new THREE.MeshBasicMaterial( { color: hexToRgb(\"#FFF\"), side: THREE.BackSide, map: texture } );\n  var sky = new THREE.Mesh(geometry, material);\n  scene.add(sky);\n}\n","module.exports = function( THREE ) {\n\t/**\n\t * @author qiao / https://github.com/qiao\n\t * @author mrdoob / http://mrdoob.com\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author erich666 / http://erichaines.com\n\t */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finter swipe\n\n\tfunction OrbitControls( object, domElement ) {\n\n\t\tthis.object = object;\n\n\t\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new THREE.Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.25;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t\t// Set to false to disable use of the keys\n\t\tthis.enableKeys = true;\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function() {\n\n\t\t\tvar offset = new THREE.Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\t\tvar quatInverse = quat.clone().inverse();\n\n\t\t\tvar lastPosition = new THREE.Vector3();\n\t\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\t\treturn function update () {\n\n\t\t\t\tvar position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t// restrict theta to be between desired limits\n\t\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function() {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tvar scope = this;\n\n\t\tvar changeEvent = { type: 'change' };\n\t\tvar startEvent = { type: 'start' };\n\t\tvar endEvent = { type: 'end' };\n\n\t\tvar STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\n\t\tvar state = STATE.NONE;\n\n\t\tvar EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tvar spherical = new THREE.Spherical();\n\t\tvar sphericalDelta = new THREE.Spherical();\n\n\t\tvar scale = 1;\n\t\tvar panOffset = new THREE.Vector3();\n\t\tvar zoomChanged = false;\n\n\t\tvar rotateStart = new THREE.Vector2();\n\t\tvar rotateEnd = new THREE.Vector2();\n\t\tvar rotateDelta = new THREE.Vector2();\n\n\t\tvar panStart = new THREE.Vector2();\n\t\tvar panEnd = new THREE.Vector2();\n\t\tvar panDelta = new THREE.Vector2();\n\n\t\tvar dollyStart = new THREE.Vector2();\n\t\tvar dollyEnd = new THREE.Vector2();\n\t\tvar dollyDelta = new THREE.Vector2();\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tvar panLeft = function() {\n\n\t\t\tvar v = new THREE.Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tvar panUp = function() {\n\n\t\t\tvar v = new THREE.Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 ); // get Y column of objectMatrix\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tvar pan = function() {\n\n\t\t\tvar offset = new THREE.Vector3();\n\n\t\t\treturn function pan ( deltaX, deltaY ) {\n\n\t\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tvar position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\t//console.log( 'handleMouseDownPan' );\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\t//console.log( 'handleMouseMovePan' );\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseUp( event ) {\n\n\t\t\t//console.log( 'handleMouseUp' );\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\t//console.log( 'handleMouseWheel' );\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\t//console.log( 'handleKeyDown' );\n\n\t\t\tswitch ( event.keyCode ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate( event ) {\n\n\t\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly( event ) {\n\n\t\t\t//console.log( 'handleTouchStartDolly' );\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartPan( event ) {\n\n\t\t\t//console.log( 'handleTouchStartPan' );\n\n\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\t//console.log( 'handleTouchMoveDolly' );\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\t//console.log( 'handleTouchMovePan' );\n\n\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleTouchEnd( event ) {\n\n\t\t\t//console.log( 'handleTouchEnd' );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( event.button === scope.mouseButtons.ORBIT ) {\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t} else if ( event.button === scope.mouseButtons.PAN ) {\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( state === STATE.ROTATE ) {\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t} else if ( state === STATE.DOLLY ) {\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t} else if ( state === STATE.PAN ) {\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseUp( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\thandleMouseUp( event );\n\n\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( startEvent ); // not sure why these are here...\n\t\t\tscope.dispatchEvent( endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleTouchStartDolly( event );\n\n\t\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?...\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return; // is this needed?...\n\n\t\t\t\t\thandleTouchMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return; // is this needed?...\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchEnd( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\thandleTouchEnd( event );\n\n\t\t\tscope.dispatchEvent( endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\t\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\t\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t};\n\n\tOrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\n\tOrbitControls.prototype.constructor = OrbitControls;\n\n\tObject.defineProperties( OrbitControls.prototype, {\n\n\t\tcenter: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\t\treturn this.target;\n\n\t\t\t}\n\n\t\t},\n\n\t\t// backward compatibility\n\n\t\tnoZoom: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\treturn ! this.enableZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\tthis.enableZoom = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoRotate: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\treturn ! this.enableRotate;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\tthis.enableRotate = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoPan: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\treturn ! this.enablePan;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\tthis.enablePan = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoKeys: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\treturn ! this.enableKeys;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\tthis.enableKeys = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tstaticMoving : {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\treturn ! this.enableDamping;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\tthis.enableDamping = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdynamicDampingFactor : {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\treturn this.dampingFactor;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\tthis.dampingFactor = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\treturn OrbitControls;\n};\n","'use strict';\n\nmodule.exports = modifiedNewtonRaphson;\n\nfunction modifiedNewtonRaphson (f, fp, fpp, x0, options) {\n  var x1, y, yp, ypp, tol, maxIter, iter, yph, ymh, yp2h, ym2h, h, hr, h2r, verbose, eps, denom;\n\n  // Iterpret variadic forms:\n  if (typeof fpp !== 'function') {\n    if (typeof fp === 'function') {\n      options = x0;\n      x0 = fpp;\n    } else {\n      options = fpp;\n      x0 = fp;\n      fp = null;\n    }\n    fpp = null;\n  }\n\n  options = options || {};\n  tol = options.tolerance === undefined ? 1e-7 : options.tolerance;\n  eps = options.epsilon === undefined ? 2.220446049250313e-16 : options.epsion;\n  maxIter = options.maxIterations === undefined ? 20 : options.maxIterations;\n  h = options.h === undefined ? 1e-4 : options.h;\n  verbose = options.verbose === undefined ? false : options.verbose;\n  hr = 1 / h;\n  h2r = hr * hr;\n\n  iter = 0;\n  while (iter++ < maxIter) {\n    // Compute the value of the function:\n    y = f(x0);\n\n    // Compute the second derivative using a fourth order central difference:\n    if (fpp) {\n      yp = fp(x0);\n      ypp = fpp(x0);\n    } else {\n      if (fp) {\n        // Has first derivative specified:\n        yp = fp(x0);\n\n        // Evaluate first derivative to compute second numerically:\n        yph = fp(x0 + h);\n        ymh = fp(x0 - h);\n        yp2h = fp(x0 + 2 * h);\n        ym2h = fp(x0 - 2 * h);\n\n        // Second derivative is first derivative of the first derivative:\n        ypp = (8 * (yph - ymh) + (ym2h - yp2h)) * hr / 12;\n      } else {\n        // Needs first and second numerical derivatives:\n        yph = f(x0 + h);\n        ymh = f(x0 - h);\n        yp2h = f(x0 + 2 * h);\n        ym2h = f(x0 - 2 * h);\n\n        yp = (8 * (yph - ymh) + (ym2h - yp2h)) * hr / 12;\n        ypp = (-30 * y + 16 * (yph + ymh) - (yp2h + ym2h)) * h2r / 12;\n      }\n    }\n\n    // Check for badly conditioned first derivative (extremely small relative to function):\n    if (Math.abs(yp) <= eps * Math.abs(y)) {\n      if (verbose) {\n        console.log('Modified Newton-Raphson: failed to converged due to nearly zero first derivative');\n      }\n      return false;\n    }\n\n    denom = (yp * yp - y * ypp);\n\n    if (denom === 0) {\n      if (verbose) {\n        console.log('Modified Newton-Raphson: failed to converged due to divide by zero');\n      }\n      return false;\n    }\n\n    // Update the guess:\n    x1 = x0 - y * yp / denom;\n\n    // Check for convergence:\n    if (Math.abs(x1 - x0) <= tol * Math.abs(x1)) {\n      if (verbose) {\n        console.log('Modified Newton-Raphson: converged to x = ' + x1 + ' after ' + iter + ' iterations');\n      }\n      return x1;\n    }\n\n    // Transfer update to the new guess:\n    x0 = x1;\n  }\n\n  if (verbose) {\n    console.log('Modified Newton-Raphson: Maximum iterations reached (' + maxIter + ')');\n  }\n\n  return false;\n}\n","import './static/css/styles.scss'\nimport planetarySystems from './static/data/planetarySystems.json'\nimport { createCelestialObject, createCelestialObjectsFromArray } from './classes/_celestialObject.js'\nimport { drawOrbit, drawOrbitsFromArray } from './classes/_orbits.js'\nimport { createSky } from './classes/_sky.js'\nimport sky from './static/img/milkyway.jpg'\n\nvar THREE = require('three');\nvar OrbitControls = require('three-orbit-controls')(THREE);\nvar findRoot = require('modified-newton-raphson');\n\nvar scene;\nvar renderer;\nvar camera;\nvar controls;\nvar container;\n\nvar animationSpeed = 1;\nvar deltaT = 0;\n\nfunction init(containerId) {\n\t//Setup scene and renderer\n\tcontainer = document.getElementById(containerId);\n\tscene = new THREE.Scene();\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( container.clientWidth, container.clientHeight, false );\n\trenderer.physicallyCorrectLights = true;\n\tcontainer.appendChild( renderer.domElement );\n\n\t//Camera and controls\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 10000 ); //FOV, aspect ratio, near (closer won't be rendered), far (further than that won't be rendered)\n\tcamera.position.z = 5;\n\tcamera.lookAt( new THREE.Vector3( 0, 0, 0 ) );\n\tcontrols = new OrbitControls(camera, renderer.domElement);\n\n\t//Ambient lighting\n  var ambientLight = new THREE.AmbientLight(0x0c0c0c);\n  scene.add(ambientLight);\n}\n\nfunction onWindowResize() {\n  // set the aspect ratio to match the new browser window aspect ratio\n  camera.aspect = container.clientWidth / container.clientHeight;\n  // update the camera's frustum\n  camera.updateProjectionMatrix();\n  // update the size of the renderer AND the canvas\n  renderer.setSize( container.clientWidth, container.clientHeight );\n}\n\nfunction start() {\n  renderer.setAnimationLoop( () => {\n    update();\n    render();\n  } );\n}\n\nfunction stop() {\n  renderer.setAnimationLoop( null );\n}\n\n// perform any updates to the scene, called once per frame\n// avoid heavy computation here\nfunction update() {\n\t//Draw orbit functionality here\n\tdrawOrbitsFromArray(planetarySystems.CelestialObjects, scene, deltaT, animationSpeed);\n\tdeltaT += 1;\n}\n\n// render, or 'draw a still image', of the scene\nfunction render() {\n  renderer.render( scene, camera );\n}\n\ninit(\"container\");\nwindow.addEventListener( 'resize', onWindowResize );\n\ncreateSky(scene, sky);\n\ncreateCelestialObjectsFromArray(planetarySystems.CelestialObjects, scene);\n\nstart();\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}